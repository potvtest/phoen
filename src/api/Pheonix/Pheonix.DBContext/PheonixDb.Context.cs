//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pheonix.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PhoenixEntities : DbContext
    {
        public PhoenixEntities()
            : base("name=PhoenixEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Person> People { get; set; }       
        public virtual DbSet<PersonAddress> PersonAddresses { get; set; }
        public virtual DbSet<PersonContact> PersonContacts { get; set; }
        public virtual DbSet<PersonPersonal> PersonPersonals { get; set; }
        public virtual DbSet<PersonEmploymentHistory> PersonEmploymentHistories { get; set; }
        public virtual DbSet<PersonBondDetail> PersonBondDetails { get; set; }
        public virtual DbSet<PersonDependent> PersonDependents { get; set; }
        public virtual DbSet<PersonExtension> PersonExtensions { get; set; }
        public virtual DbSet<PersonMedicalHistory> PersonMedicalHistories { get; set; }
        public virtual DbSet<PersonDeclaration> PersonDeclarations { get; set; }
        public virtual DbSet<PersonSkillMapping> PersonSkillMappings { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<SignInSignOut> SignInSignOut { get; set; }
        public virtual DbSet<Certifications> Certifications { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<VisaType> VisaType { get; set; }
        public virtual DbSet<PersonVisa> PersonVisa { get; set; }
        public virtual DbSet<LeaveType> LeaveType { get; set; }
        public virtual DbSet<PersonLeave> PersonLeave { get; set; }
        public virtual DbSet<PrimaryApprover> PrimaryApprover { get; set; }
        public virtual DbSet<SecondaryApprover> SecondaryApprover { get; set; }
        public virtual DbSet<ExpenseCategory> ExpenseCategory { get; set; }
        public virtual DbSet<ClientName> ClientName { get; set; }
        public virtual DbSet<CostCenter> CostCenter { get; set; }
        public virtual DbSet<Currency> Currency { get; set; }
        public virtual DbSet<Expense> Expense { get; set; }
        public virtual DbSet<ExpenseDetails> ExpenseDetails { get; set; }
        public virtual DbSet<MultiRecordStage> MultiRecordStage { get; set; }
        public virtual DbSet<Stage> Stage { get; set; }
        public virtual DbSet<Project> Project { get; set; }
        public virtual DbSet<ResourcePool> ResourcePool { get; set; }
        public virtual DbSet<PersonInRole> PersonInRole { get; set; }
        public virtual DbSet<PersonKRADetail> PersonKRADetails { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<PersonReporting> PersonReporting { get; set; }
        public virtual DbSet<PhoenixConfig> PhoenixConfig { get; set; }
        public virtual DbSet<Emails> Emails { get; set; }
        public virtual DbSet<EmailTemplate> EmailTemplate { get; set; }
        public virtual DbSet<Approval> Approval { get; set; }
        public virtual DbSet<PersonEmployment> PersonEmployment { get; set; }
        public virtual DbSet<Navigation> Navigation { get; set; }
        public virtual DbSet<ApprovalDetail> ApprovalDetail { get; set; }
        public virtual DbSet<PersonCertification> PersonCertification { get; set; }
        public virtual DbSet<CompOff> CompOff { get; set; }
        public virtual DbSet<HelpDeskComments> HelpDeskComments { get; set; }
        public virtual DbSet<HelpDeskSubCategories> HelpDeskSubCategories { get; set; }
        public virtual DbSet<PersonHelpDesk> PersonHelpDesk { get; set; }
        public virtual DbSet<DeliveryTeam> DeliveryTeam { get; set; }
        public virtual DbSet<DeliveryUnit> DeliveryUnit { get; set; }
        public virtual DbSet<Traveller> Traveller { get; set; }
        public virtual DbSet<TravelTransactions> TravelTransactions { get; set; }
        public virtual DbSet<TravelUploads> TravelUploads { get; set; }
        public virtual DbSet<KitchenPreferences> KitchenPreferences { get; set; }
        public virtual DbSet<KRACategory> KRACategories { get; set; }
        public virtual DbSet<GeneralPreferences> GeneralPreferences { get; set; }
        public virtual DbSet<ServicesPreferences> ServicesPreferences { get; set; }
        public virtual DbSet<MediaPreferences> MediaPreferences { get; set; }
        public virtual DbSet<FlightClass> FlightClass { get; set; }
        public virtual DbSet<TravelExtensionHistory> TravelExtensionHistory { get; set; }
        public virtual DbSet<PersonLeaveCredit> PersonLeaveCredit { get; set; }
        public virtual DbSet<HelpDeskCategories> HelpDeskCategories { get; set; }
        public virtual DbSet<ClientInformation> ClientInformation { get; set; }
        public virtual DbSet<MealPreference> MealPreference { get; set; }
        public virtual DbSet<SeatLocationPreference> SeatLocationPreference { get; set; }
        public virtual DbSet<HotelRoomType> HotelRoomType { get; set; }
        public virtual DbSet<TravelBookingAgency> TravelBookingAgency { get; set; }
        public virtual DbSet<TravelCardType> TravelCardType { get; set; }
        public virtual DbSet<TravelFLightAirlines> TravelFLightAirlines { get; set; }
        public virtual DbSet<Flight> Flight { get; set; }
        public virtual DbSet<FlightDetails> FlightDetails { get; set; }
        public virtual DbSet<TravelMoneyTransactions> TravelMoneyTransactions { get; set; }
        public virtual DbSet<HotelBooking> HotelBooking { get; set; }
        public virtual DbSet<InternetPreferences> InternetPreferences { get; set; }
        public virtual DbSet<TravelDetails> TravelDetails { get; set; }
        public virtual DbSet<EmailAction> EmailAction { get; set; }
        public virtual DbSet<ApprisalQuestions> ApprisalQuestions { get; set; }
        public virtual DbSet<ApprisalParameters> ApprisalParameters { get; set; }
        public virtual DbSet<AppraiseForm> AppraiseForm { get; set; }
        public virtual DbSet<AppraiserForm> AppraiserForm { get; set; }
        public virtual DbSet<AppraisalReporting> AppraisalReporting { get; set; }
        public virtual DbSet<CustomerContract> CustomerContract { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddress { get; set; }
        public virtual DbSet<CustomerContactPerson> CustomerContactPerson { get; set; }
        public virtual DbSet<EmploymentStatus> EmploymentStatus { get; set; }
        public virtual DbSet<PMSTasks> PMSTasks { get; set; }
        public virtual DbSet<PMSTaskTypes> PMSTaskTypes { get; set; }
        public virtual DbSet<CompensatoryOffException> CompensatoryOffException { get; set; }
        public virtual DbSet<PersonConfirmation> PersonConfirmation { get; set; }
        public virtual DbSet<DeletedRecordsLogDetails> DeletedRecordsLogDetails { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<ProjectList> ProjectList { get; set; }
        public virtual DbSet<PersonEmploymentChangeLog> PersonEmploymentChangeLog { get; set; }
        public virtual DbSet<SeparationReasonMaster> SeparationReasonMaster { get; set; }
        public virtual DbSet<PMSRole> PMSRole { get; set; }
        public virtual DbSet<PMSConfiguration> PMSConfiguration { get; set; }
        public virtual DbSet<InvoiceSalesPeriod> InvoiceSalesPeriod { get; set; }
        public virtual DbSet<SeparationReasons> SeparationReasons { get; set; }
        public virtual DbSet<SeperationProcess> SeperationProcess { get; set; }
        public virtual DbSet<Separation> Separation { get; set; }
        public virtual DbSet<HolidayList> HolidayList { get; set; }
        public virtual DbSet<ExitFormEmployeeDeclaration> ExitFormEmployeeDeclaration { get; set; }
        public virtual DbSet<OrganizationDevelopmentSuggestion> OrganizationDevelopmentSuggestion { get; set; }
        public virtual DbSet<RatingForOrganization> RatingForOrganization { get; set; }
        public virtual DbSet<RatingForReportingLead> RatingForReportingLead { get; set; }
        public virtual DbSet<PMSAllocationRequest> PMSAllocationRequest { get; set; }
        public virtual DbSet<PMSAllocationRequestDetails> PMSAllocationRequestDetails { get; set; }
        public virtual DbSet<PMSResourceAllocationHistory> PMSResourceAllocationHistory { get; set; }
        public virtual DbSet<PMSAllocationRequestDetailsHistory> PMSAllocationRequestDetailsHistory { get; set; }
        public virtual DbSet<PersonExitProcessForm> PersonExitProcessForm { get; set; }
        public virtual DbSet<PMSResourceAllocation> PMSResourceAllocation { get; set; }
        public virtual DbSet<FeedbackForLeavingOrg> FeedbackForLeavingOrg { get; set; }
        public virtual DbSet<SeperationConfig> SeperationConfig { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Component> Component { get; set; }
        public virtual DbSet<EmailRecussionTesting> EmailRecussionTesting { get; set; }
        public virtual DbSet<ExpenseApprovalStage> ExpenseApprovalStage { get; set; }
        public virtual DbSet<File> File { get; set; }
        public virtual DbSet<ModuleExtension> ModuleExtension { get; set; }
        public virtual DbSet<PersonHelpDeskChangeLog> PersonHelpDeskChangeLog { get; set; }
        public virtual DbSet<PMSInvoice> PMSInvoice { get; set; }
        public virtual DbSet<PMSInvoiceDetails> PMSInvoiceDetails { get; set; }
        public virtual DbSet<QualificationGroup> QualificationGroup { get; set; }
        public virtual DbSet<ReviewerForm> ReviewerForm { get; set; }
        public virtual DbSet<RoleEntitlement> RoleEntitlement { get; set; }
        public virtual DbSet<SigninSignOutStatus> SigninSignOutStatus { get; set; }
        public virtual DbSet<SISO> SISO { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<WorkLocation> WorkLocation { get; set; }
        public virtual DbSet<CustomerList> CustomerList { get; set; }
        public virtual DbSet<phdbckup> phdbckup { get; set; }
        public virtual DbSet<CosecData> CosecData { get; set; }
        public virtual DbSet<Expense_New> Expense_New { get; set; }
        public virtual DbSet<ExpenseCategory_New> ExpenseCategory_New { get; set; }
        public virtual DbSet<ExpenseDetails_New> ExpenseDetails_New { get; set; }
        public virtual DbSet<PersonReportingChangeLog> PersonReportingChangeLog { get; set; }
        public virtual DbSet<PersonPassport> PersonPassport { get; set; }
        public virtual DbSet<PMSTimesheet> PMSTimesheet { get; set; }
        public virtual DbSet<PersonCLCredit> PersonCLCredit { get; set; }
        public virtual DbSet<PMSInvoicePayments> PMSInvoicePayments { get; set; }
        public virtual DbSet<PMSAllocationRatings> PMSAllocationRatings { get; set; }
        public virtual DbSet<ProjectSkill> ProjectSkill { get; set; }
        public virtual DbSet<PMSAllocationBillableType> PMSAllocationBillableType { get; set; }
        public virtual DbSet<PMSAllocationExtentionRequest> PMSAllocationExtentionRequest { get; set; }
        public virtual DbSet<PMSAllocationNewRequest> PMSAllocationNewRequest { get; set; }
        public virtual DbSet<PMSAllocationReleaseRequest> PMSAllocationReleaseRequest { get; set; }
        public virtual DbSet<PMSAllocationSkillRatings> PMSAllocationSkillRatings { get; set; }
        public virtual DbSet<PMSAllocationUpdateRequest> PMSAllocationUpdateRequest { get; set; }
        public virtual DbSet<PMSRoles> PMSRoles { get; set; }
        public virtual DbSet<PMSAction> PMSAction { get; set; }
        public virtual DbSet<PMSActionMapping> PMSActionMapping { get; set; }
        public virtual DbSet<PMSRoleMapping> PMSRoleMapping { get; set; }
        public virtual DbSet<ContractAttachments> ContractAttachments { get; set; }
        public virtual DbSet<CandidateAddress> CandidateAddress { get; set; }
        public virtual DbSet<CandidateCertification> CandidateCertification { get; set; }
        public virtual DbSet<CandidateEmploymentHistory> CandidateEmploymentHistory { get; set; }
        public virtual DbSet<CandidatePassport> CandidatePassport { get; set; }
        public virtual DbSet<TAInterviewer> TAInterviewer { get; set; }
        public virtual DbSet<TARRF> TARRF { get; set; }
        public virtual DbSet<TARRFDetail> TARRFDetail { get; set; }
        public virtual DbSet<TASkills> TASkills { get; set; }
        public virtual DbSet<BGParameterList> BGParameterList { get; set; }
        public virtual DbSet<CustomerBGMapping> CustomerBGMapping { get; set; }
        public virtual DbSet<PersonBGMapping> PersonBGMapping { get; set; }
        public virtual DbSet<VCFConfigurationList> VCFConfigurationList { get; set; }
        public virtual DbSet<VCFApprover> VCFApprovers { get; set; }
        public virtual DbSet<vwCurrentAllocation> vwCurrentAllocation { get; set; }
        public virtual DbSet<vwHistoryAllocation> vwHistoryAllocation { get; set; }
        public virtual DbSet<CandidatePersonal> CandidatePersonal { get; set; }
        public virtual DbSet<Candidate> Candidate { get; set; }
        public virtual DbSet<CandidateQualificationMapping> CandidateQualificationMapping { get; set; }
        public virtual DbSet<CandidateSkillMapping> CandidateSkillMapping { get; set; }
        public virtual DbSet<Qualification> Qualification { get; set; }
        public virtual DbSet<SkillMatrix> SkillMatrices { get; set; }
        public virtual DbSet<PersonQualificationMapping> PersonQualificationMappings { get; set; }
        public virtual DbSet<Jobdescription> Jobdescriptions { get; set; }
        public virtual DbSet<PersonLeaveLedger> PersonLeaveLedgers { get; set; }
        public virtual DbSet<PersonLeaveLedgerHistory> PersonLeaveLedgerHistories { get; set; }
        public virtual DbSet<ReportAccessConfig> ReportAccessConfigs { get; set; }
        public virtual DbSet<ReportMaster> ReportMasters { get; set; }
        public virtual DbSet<LocationLeaf> LocationLeaves { get; set; }
        public virtual DbSet<PersonSLCredit> PersonSLCredits { get; set; }
        public virtual DbSet<Competency> Competencies { get; set; }
        public virtual DbSet<PersonPastExperience> PersonPastExperience { get; set; }
        public virtual DbSet<ReportDropDownConfig> ReportDropDownConfig { get; set; }
        public virtual DbSet<JobScheduler> JobScheduler { get; set; }
        public virtual DbSet<KRAProgress> KRAProgresses { get; set; }
        public virtual DbSet<PersonKRA> PersonKRAs { get; set; }
        public virtual DbSet<PersonKRAYear> PersonKRAYears { get; set; }
        public virtual DbSet<PersonKRAHistoryDetail> PersonKRAHistoryDetail { get; set; }
        public virtual DbSet<PersonKRAMapping> PersonKRAMappings { get; set; }
        public virtual DbSet<FloatingHolidayStatus> FloatingHolidayStatus { get; set; }
        public virtual DbSet<OrganizationCategory> OrganizationCategory { get; set; }
        public virtual DbSet<ReviewerComment> ReviewerComment { get; set; }
        public virtual DbSet<KRAFileUpload> KRAFileUpload { get; set; }
        public virtual DbSet<EmployeeProfileAttachment> EmployeeProfileAttachment { get; set; }
        public virtual DbSet<PersonKRAFeedback> PersonKRAFeedback { get; set; }
        public virtual DbSet<NomineeDetails> NomineeDetails { get; set; }
        public virtual DbSet<TravelInsurance> TravelInsurance { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetAbsentees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAbsentees");
        }
    
        public virtual int AutoApplyCompOff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoApplyCompOff");
        }
    
        public virtual int ExpiredCompOff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpiredCompOff");
        }
    
        public virtual int AutoApprovalLeaves()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoApprovalLeaves");
        }
    
        public virtual ObjectResult<GetApprovalsFor_Result> GetApprovalsFor(Nullable<int> approverId, Nullable<int> requestType)
        {
            var approverIdParameter = approverId.HasValue ?
                new ObjectParameter("ApproverId", approverId) :
                new ObjectParameter("ApproverId", typeof(int));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovalsFor_Result>("GetApprovalsFor", approverIdParameter, requestTypeParameter);
        }
    
        public virtual int DeleteApproval(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("requestId", requestId) :
                new ObjectParameter("requestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteApproval", requestIdParameter);
        }
    
        public virtual ObjectResult<GetReportingManager_Result> GetReportingManager(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportingManager_Result>("GetReportingManager", personIdParameter);
        }
    
        public virtual ObjectResult<GetExpenseToApprove_Result> GetExpenseToApprove(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseToApprove_Result>("GetExpenseToApprove", personidParameter);
        }
    
        public virtual ObjectResult<GetMySubmittedExpenses_Result> GetMySubmittedExpenses(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMySubmittedExpenses_Result>("GetMySubmittedExpenses", personIdParameter);
        }
    
        public virtual ObjectResult<GetApprovedExpenses_Result> GetApprovedExpenses(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovedExpenses_Result>("GetApprovedExpenses", personIdParameter);
        }
    
        public virtual int MarkAbsent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkAbsent");
        }
    
        public virtual ObjectResult<string> GetFinanceEmailId(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFinanceEmailId", roleIdParameter);
        }
    
        public virtual ObjectResult<GetTotalStages_Result> GetTotalStages(Nullable<int> expenseId, Nullable<int> personid)
        {
            var expenseIdParameter = expenseId.HasValue ?
                new ObjectParameter("expenseId", expenseId) :
                new ObjectParameter("expenseId", typeof(int));
    
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalStages_Result>("GetTotalStages", expenseIdParameter, personidParameter);
        }
    
        public virtual ObjectResult<GetExpenseApprovers_Result> GetExpenseApprovers(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseApprovers_Result>("GetExpenseApprovers", personIdParameter);
        }
    
        public virtual ObjectResult<GetLeaveApprovalHistory_Result> GetLeaveApprovalHistory(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveApprovalHistory_Result>("GetLeaveApprovalHistory", personidParameter);
        }
    
        public virtual int PresentOnLeave()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PresentOnLeave");
        }
    
        public virtual int ReportingChange(Nullable<int> userID, Nullable<int> reportingID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var reportingIDParameter = reportingID.HasValue ?
                new ObjectParameter("ReportingID", reportingID) :
                new ObjectParameter("ReportingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportingChange", userIDParameter, reportingIDParameter);
        }
    
        public virtual ObjectResult<GetLeaveCount_Result1> GetLeaveCount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveCount_Result1>("GetLeaveCount", idParameter);
        }
    
        public virtual ObjectResult<GetMySubmittedTravel_Result> GetMySubmittedTravel(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMySubmittedTravel_Result>("GetMySubmittedTravel", personIdParameter);
        }
    
        public virtual ObjectResult<GetTravelToApprove_Result> GetTravelToApprove(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTravelToApprove_Result>("GetTravelToApprove", personidParameter);
        }
    
        public virtual ObjectResult<GetApprovalForTravel_Result> GetApprovalForTravel(Nullable<int> requestType, Nullable<int> roleId, Nullable<int> approverId)
        {
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var approverIdParameter = approverId.HasValue ?
                new ObjectParameter("approverId", approverId) :
                new ObjectParameter("approverId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovalForTravel_Result>("GetApprovalForTravel", requestTypeParameter, roleIdParameter, approverIdParameter);
        }
    
        public virtual ObjectResult<GetApprovedTravelRequests_Result> GetApprovedTravelRequests(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovedTravelRequests_Result>("GetApprovedTravelRequests", personidParameter);
        }
    
        public virtual ObjectResult<GetAppraisalSummary_Result> GetAppraisalSummary(Nullable<int> rating, Nullable<int> deliveryteam, Nullable<int> deliveryunit, Nullable<int> year)
        {
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var deliveryteamParameter = deliveryteam.HasValue ?
                new ObjectParameter("deliveryteam", deliveryteam) :
                new ObjectParameter("deliveryteam", typeof(int));
    
            var deliveryunitParameter = deliveryunit.HasValue ?
                new ObjectParameter("deliveryunit", deliveryunit) :
                new ObjectParameter("deliveryunit", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppraisalSummary_Result>("GetAppraisalSummary", ratingParameter, deliveryteamParameter, deliveryunitParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetLatestActivity_Result> GetLatestActivity(Nullable<int> personid, Nullable<int> requestType)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestActivity_Result>("GetLatestActivity", personidParameter, requestTypeParameter);
        }
    
        public virtual ObjectResult<rpt_AppraisalCurrentStatus_Result> rpt_AppraisalCurrentStatus(Nullable<int> year, Nullable<int> location)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_AppraisalCurrentStatus_Result>("rpt_AppraisalCurrentStatus", yearParameter, locationParameter);
        }
    
        public virtual ObjectResult<GetCustomerData_Result> GetCustomerData(string search, Nullable<bool> isActive)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerData_Result>("GetCustomerData", searchParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GetTimesheet_Result> GetTimesheet(Nullable<int> userID, string startDate, string endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheet_Result>("GetTimesheet", userIDParameter, startDateParameter, endDateParameter);
        }
        
        public virtual ObjectResult<GetExitProcessManager_Result> GetExitProcessManager(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExitProcessManager_Result>("GetExitProcessManager", personIdParameter);
        }
    
        public virtual int getPMSRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getPMSRoles");
        }
    
        public virtual int CreditCompOffAfterWithdraw(Nullable<System.DateTime> resignDate, Nullable<int> personID)
        {
            var resignDateParameter = resignDate.HasValue ?
                new ObjectParameter("ResignDate", resignDate) :
                new ObjectParameter("ResignDate", typeof(System.DateTime));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreditCompOffAfterWithdraw", resignDateParameter, personIDParameter);
        }
    
        public virtual ObjectResult<rpt_bench_less_than_100_new_Result> rpt_bench_less_than_100_new()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_bench_less_than_100_new_Result>("rpt_bench_less_than_100_new");
        }
    
        public virtual ObjectResult<rpt_bench_report_new_Result> rpt_bench_report_new()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_bench_report_new_Result>("rpt_bench_report_new");
        }
    
        public virtual ObjectResult<rpt_Current_Allocation_Result> rpt_Current_Allocation(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_Current_Allocation_Result>("rpt_Current_Allocation", startDateParameter, endDateParameter);
        }
    
        public virtual int rpt_Monthly_Allocation(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_Monthly_Allocation", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_RMG_All_Result> rpt_RMG_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RMG_All_Result>("rpt_RMG_All");
        }
    
        public virtual ObjectResult<rpt_RMG_Detail_Result> rpt_RMG_Detail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RMG_Detail_Result>("rpt_RMG_Detail");
        }
    
        public virtual ObjectResult<rpt_RMG_Issue_Status_Result> rpt_RMG_Issue_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RMG_Issue_Status_Result>("rpt_RMG_Issue_Status");
        }
    
        public virtual ObjectResult<rpt_RMG_Monthly_Status_Result> rpt_RMG_Monthly_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RMG_Monthly_Status_Result>("rpt_RMG_Monthly_Status");
        }
    
        public virtual ObjectResult<rpt_rmg_tickets_Result> rpt_rmg_tickets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_rmg_tickets_Result>("rpt_rmg_tickets");
        }
    
        public virtual int DeleteLogInDetails(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLogInDetails", personIDParameter);
        }
    
        public virtual ObjectResult<CheckConsecutiveAbsentee_Result> CheckConsecutiveAbsentee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckConsecutiveAbsentee_Result>("CheckConsecutiveAbsentee");
        }
    
        public virtual int attendance(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("attendance", startDateParameter, endDateParameter, employeecodeParameter);
        }
    
        public virtual int attendance_Test(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("attendance_Test", startDateParameter, endDateParameter, employeecodeParameter);
        }
    
        public virtual int AutoApplyCompOff_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoApplyCompOff_Test");
        }
    
        public virtual int AutoApprovalLeaves_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoApprovalLeaves_Test");
        }
    
        public virtual int AutoExpireCompOff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoExpireCompOff");
        }
    
        public virtual int BindAttendance(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string loggedInEmployee, Nullable<int> employeeCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var loggedInEmployeeParameter = loggedInEmployee != null ?
                new ObjectParameter("LoggedInEmployee", loggedInEmployee) :
                new ObjectParameter("LoggedInEmployee", typeof(string));
    
            var employeeCodeParameter = employeeCode.HasValue ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindAttendance", fromDateParameter, toDateParameter, loggedInEmployeeParameter, employeeCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAbsentees_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAbsentees_Test");
        }
    
        [DbFunction("PhoenixEntities", "GetApprovalHierarchy")]
        public virtual IQueryable<GetApprovalHierarchy_Result> GetApprovalHierarchy(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetApprovalHierarchy_Result>("[PhoenixEntities].[GetApprovalHierarchy](@userID)", userIDParameter);
        }
    
        public virtual ObjectResult<GetCompOffApprovals_Result> GetCompOffApprovals(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompOffApprovals_Result>("GetCompOffApprovals", personIdParameter);
        }
    
        public virtual ObjectResult<GetEmpProfile_Result> GetEmpProfile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpProfile_Result>("GetEmpProfile");
        }
    
        public virtual ObjectResult<GetEmpProfile_Test_Result> GetEmpProfile_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpProfile_Test_Result>("GetEmpProfile_Test");
        }
    
        public virtual ObjectResult<GetExitProcessManager_Test_Result> GetExitProcessManager_Test(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExitProcessManager_Test_Result>("GetExitProcessManager_Test", personIdParameter);
        }
    
        public virtual ObjectResult<GetExpenseApprovers_Test_Result> GetExpenseApprovers_Test(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseApprovers_Test_Result>("GetExpenseApprovers_Test", personIdParameter);
        }
    
        public virtual ObjectResult<GetExpenseLatestActivity_Result> GetExpenseLatestActivity(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseLatestActivity_Result>("GetExpenseLatestActivity", personidParameter);
        }
    
        public virtual ObjectResult<GetExpenseLatestActivity_Test_Result> GetExpenseLatestActivity_Test(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseLatestActivity_Test_Result>("GetExpenseLatestActivity_Test", personidParameter);
        }
    
        public virtual ObjectResult<GetExpenseManager_Result> GetExpenseManager(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpenseManager_Result>("GetExpenseManager", userIDParameter);
        }
    
        public virtual ObjectResult<GetLatestActivity_Test_Result> GetLatestActivity_Test(Nullable<int> personid, Nullable<int> requestType)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestActivity_Test_Result>("GetLatestActivity_Test", personidParameter, requestTypeParameter);
        }
    
        public virtual ObjectResult<GetLeaveApprovalHistory_Test_Result> GetLeaveApprovalHistory_Test(Nullable<int> personid)
        {
            var personidParameter = personid.HasValue ?
                new ObjectParameter("personid", personid) :
                new ObjectParameter("personid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveApprovalHistory_Test_Result>("GetLeaveApprovalHistory_Test", personidParameter);
        }
    
        public virtual ObjectResult<GetLeaveData_Bck_Result> GetLeaveData_Bck(Nullable<int> id, Nullable<int> year)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveData_Bck_Result>("GetLeaveData_Bck", idParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetMySubmittedExpenses_Test_Result> GetMySubmittedExpenses_Test(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMySubmittedExpenses_Test_Result>("GetMySubmittedExpenses_Test", personIdParameter);
        }
    
        public virtual ObjectResult<GetMySubmittedTravel_Test_Result> GetMySubmittedTravel_Test(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMySubmittedTravel_Test_Result>("GetMySubmittedTravel_Test", personIdParameter);
        }
    
        public virtual ObjectResult<GetNavigation_Result> GetNavigation(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNavigation_Result>("GetNavigation", userIDParameter);
        }
    
        public virtual ObjectResult<GetNavigation_Test_Result> GetNavigation_Test(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNavigation_Test_Result>("GetNavigation_Test", userIDParameter);
        }
    
        public virtual ObjectResult<GetReportingManager_Test_Result> GetReportingManager_Test(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportingManager_Test_Result>("GetReportingManager_Test", personIdParameter);
        }
    
        public virtual int InsertAppraisalReporting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAppraisalReporting");
        }
    
        public virtual int MarkAbsent_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkAbsent_Test");
        }
    
        public virtual int rpt_attendance(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode, Nullable<int> loggedUser)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_attendance", startDateParameter, endDateParameter, employeecodeParameter, loggedUserParameter);
        }
    
        public virtual int rpt_attendance_Test(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode, Nullable<int> loggedUser)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_attendance_Test", startDateParameter, endDateParameter, employeecodeParameter, loggedUserParameter);
        }
    
        public virtual ObjectResult<rpt_attendanceSISO_Result> rpt_attendanceSISO(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string filterType, Nullable<int> employeecode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var employeecodeParameter = employeecode.HasValue ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_attendanceSISO_Result>("rpt_attendanceSISO", startDateParameter, endDateParameter, filterTypeParameter, employeecodeParameter);
        }
    
        public virtual ObjectResult<rpt_EmpLeavebal_Result> rpt_EmpLeavebal(string userid, Nullable<int> year)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_EmpLeavebal_Result>("rpt_EmpLeavebal", useridParameter, yearParameter);
        }
    
        public virtual int rpt_employeeallrep(Nullable<bool> employeeStatus, Nullable<System.DateTime> dateOfBirth, Nullable<int> gender, Nullable<int> loggedUser)
        {
            var employeeStatusParameter = employeeStatus.HasValue ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_employeeallrep", employeeStatusParameter, dateOfBirthParameter, genderParameter, loggedUserParameter);
        }
    
        public virtual int rpt_EmployeeDetail(string employmentStatus, Nullable<bool> employeeStatus, string employeeName, string deliveryUnit, string deliveryTeam)
        {
            var employmentStatusParameter = employmentStatus != null ?
                new ObjectParameter("EmploymentStatus", employmentStatus) :
                new ObjectParameter("EmploymentStatus", typeof(string));
    
            var employeeStatusParameter = employeeStatus.HasValue ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(bool));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var deliveryUnitParameter = deliveryUnit != null ?
                new ObjectParameter("DeliveryUnit", deliveryUnit) :
                new ObjectParameter("DeliveryUnit", typeof(string));
    
            var deliveryTeamParameter = deliveryTeam != null ?
                new ObjectParameter("DeliveryTeam", deliveryTeam) :
                new ObjectParameter("DeliveryTeam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_EmployeeDetail", employmentStatusParameter, employeeStatusParameter, employeeNameParameter, deliveryUnitParameter, deliveryTeamParameter);
        }
    
        public virtual ObjectResult<rpt_EmpSkillDetails_Result> rpt_EmpSkillDetails(string empcode, string reportingmngr, string skillid)
        {
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            var reportingmngrParameter = reportingmngr != null ?
                new ObjectParameter("reportingmngr", reportingmngr) :
                new ObjectParameter("reportingmngr", typeof(string));
    
            var skillidParameter = skillid != null ?
                new ObjectParameter("skillid", skillid) :
                new ObjectParameter("skillid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_EmpSkillDetails_Result>("rpt_EmpSkillDetails", empcodeParameter, reportingmngrParameter, skillidParameter);
        }
    
        public virtual ObjectResult<rpt_EmpSkillDetails_Test_Result> rpt_EmpSkillDetails_Test(string empcode, string reportingmngr, string skillid)
        {
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            var reportingmngrParameter = reportingmngr != null ?
                new ObjectParameter("reportingmngr", reportingmngr) :
                new ObjectParameter("reportingmngr", typeof(string));
    
            var skillidParameter = skillid != null ?
                new ObjectParameter("skillid", skillid) :
                new ObjectParameter("skillid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_EmpSkillDetails_Test_Result>("rpt_EmpSkillDetails_Test", empcodeParameter, reportingmngrParameter, skillidParameter);
        }
    
        public virtual ObjectResult<rpt_EmpSkillUpdate_Result> rpt_EmpSkillUpdate(string empcode)
        {
            var empcodeParameter = empcode != null ?
                new ObjectParameter("Empcode", empcode) :
                new ObjectParameter("Empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_EmpSkillUpdate_Result>("rpt_EmpSkillUpdate", empcodeParameter);
        }
    
        public virtual ObjectResult<rpt_expensesummary_Result> rpt_expensesummary(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string approved, string costcenter, string clientreimburse)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var approvedParameter = approved != null ?
                new ObjectParameter("approved", approved) :
                new ObjectParameter("approved", typeof(string));
    
            var costcenterParameter = costcenter != null ?
                new ObjectParameter("costcenter", costcenter) :
                new ObjectParameter("costcenter", typeof(string));
    
            var clientreimburseParameter = clientreimburse != null ?
                new ObjectParameter("clientreimburse", clientreimburse) :
                new ObjectParameter("clientreimburse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_expensesummary_Result>("rpt_expensesummary", startdateParameter, enddateParameter, approvedParameter, costcenterParameter, clientreimburseParameter);
        }
    
        public virtual ObjectResult<rpt_HD_All_Result> rpt_HD_All(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string empPrefix)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var empPrefixParameter = empPrefix != null ?
                new ObjectParameter("EmpPrefix", empPrefix) :
                new ObjectParameter("EmpPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HD_All_Result>("rpt_HD_All", startDateParameter, endDateParameter, empPrefixParameter);
        }
    
        public virtual ObjectResult<rpt_HD_Detail_Result> rpt_HD_Detail(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string empPrefix)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var empPrefixParameter = empPrefix != null ?
                new ObjectParameter("EmpPrefix", empPrefix) :
                new ObjectParameter("EmpPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HD_Detail_Result>("rpt_HD_Detail", startDateParameter, endDateParameter, empPrefixParameter);
        }
    
        public virtual ObjectResult<rpt_HD_Issue_Status_Result> rpt_HD_Issue_Status(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string empPrefix)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var empPrefixParameter = empPrefix != null ?
                new ObjectParameter("EmpPrefix", empPrefix) :
                new ObjectParameter("EmpPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HD_Issue_Status_Result>("rpt_HD_Issue_Status", startDateParameter, endDateParameter, empPrefixParameter);
        }
    
        public virtual ObjectResult<rpt_HD_Monthly_Status_Result> rpt_HD_Monthly_Status(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string empPrefix)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var empPrefixParameter = empPrefix != null ?
                new ObjectParameter("EmpPrefix", empPrefix) :
                new ObjectParameter("EmpPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HD_Monthly_Status_Result>("rpt_HD_Monthly_Status", startDateParameter, endDateParameter, empPrefixParameter);
        }
    
        public virtual ObjectResult<rpt_HD_tickets_Result> rpt_HD_tickets(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string empPrefix)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var empPrefixParameter = empPrefix != null ?
                new ObjectParameter("EmpPrefix", empPrefix) :
                new ObjectParameter("EmpPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HD_tickets_Result>("rpt_HD_tickets", startDateParameter, endDateParameter, empPrefixParameter);
        }
    
        public virtual ObjectResult<rpt_helpdesk_Result> rpt_helpdesk(Nullable<System.DateTime> issuestartdate, Nullable<System.DateTime> issueenddate, string category, string assigneduser)
        {
            var issuestartdateParameter = issuestartdate.HasValue ?
                new ObjectParameter("issuestartdate", issuestartdate) :
                new ObjectParameter("issuestartdate", typeof(System.DateTime));
    
            var issueenddateParameter = issueenddate.HasValue ?
                new ObjectParameter("issueenddate", issueenddate) :
                new ObjectParameter("issueenddate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var assigneduserParameter = assigneduser != null ?
                new ObjectParameter("assigneduser", assigneduser) :
                new ObjectParameter("assigneduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_helpdesk_Result>("rpt_helpdesk", issuestartdateParameter, issueenddateParameter, categoryParameter, assigneduserParameter);
        }
    
        public virtual ObjectResult<rpt_helpdeskdetails_Result> rpt_helpdeskdetails(Nullable<int> helpdeskID)
        {
            var helpdeskIDParameter = helpdeskID.HasValue ?
                new ObjectParameter("HelpdeskID", helpdeskID) :
                new ObjectParameter("HelpdeskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_helpdeskdetails_Result>("rpt_helpdeskdetails", helpdeskIDParameter);
        }
    
        public virtual ObjectResult<rpt_HelpdeskQuery_Result> rpt_HelpdeskQuery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_HelpdeskQuery_Result>("rpt_HelpdeskQuery");
        }
    
        public virtual ObjectResult<rpt_Leavebalance_Result> rpt_Leavebalance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_Leavebalance_Result>("rpt_Leavebalance");
        }
    
        public virtual ObjectResult<rpt_LeaveDetail_Result> rpt_LeaveDetail(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string location, Nullable<int> loggedUser)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_LeaveDetail_Result>("rpt_LeaveDetail", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter, locationParameter, loggedUserParameter);
        }
    
        public virtual int rpt_LeaveDetail_Test(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string location, Nullable<int> loggedUser)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_LeaveDetail_Test", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter, locationParameter, loggedUserParameter);
        }
    
        public virtual ObjectResult<rpt_leaveledgersummary_Result> rpt_leaveledgersummary(string userID, string location, string deliveryunit)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var deliveryunitParameter = deliveryunit != null ?
                new ObjectParameter("deliveryunit", deliveryunit) :
                new ObjectParameter("deliveryunit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leaveledgersummary_Result>("rpt_leaveledgersummary", userIDParameter, locationParameter, deliveryunitParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransaction_Result> rpt_leavetransaction(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_Result>("rpt_leavetransaction", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransaction_1_Result> rpt_leavetransaction_1(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_1_Result>("rpt_leavetransaction_1", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransaction_11_Result> rpt_leavetransaction_11(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_11_Result>("rpt_leavetransaction_11", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int rpt_leavetransaction_all_leaves(Nullable<int> empcode, string leavetype, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var empcodeParameter = empcode.HasValue ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(int));
    
            var leavetypeParameter = leavetype != null ?
                new ObjectParameter("leavetype", leavetype) :
                new ObjectParameter("leavetype", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_leavetransaction_all_leaves", empcodeParameter, leavetypeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransaction_old_Result> rpt_leavetransaction_old(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_old_Result>("rpt_leavetransaction_old", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransaction_Test_Result> rpt_leavetransaction_Test(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_Test_Result>("rpt_leavetransaction_Test", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_leavetransactionwithdaterange_Result> rpt_leavetransactionwithdaterange(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransactionwithdaterange_Result>("rpt_leavetransactionwithdaterange", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<rpt_LTran_Result> rpt_LTran(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_LTran_Result>("rpt_LTran", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int rpt_ManagerLeave(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_ManagerLeave", startDateParameter, endDateParameter, employeecodeParameter);
        }
    
        public virtual int rpt_ManagerLeave_Test(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_ManagerLeave_Test", startDateParameter, endDateParameter, employeecodeParameter);
        }
    
        public virtual int rpt_siso(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode, Nullable<int> loggedUser)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_siso", startDateParameter, endDateParameter, employeecodeParameter, loggedUserParameter);
        }
    
        public virtual int rpt_siso_Test(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeecode, Nullable<int> loggedUser)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var employeecodeParameter = employeecode != null ?
                new ObjectParameter("Employeecode", employeecode) :
                new ObjectParameter("Employeecode", typeof(string));
    
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_siso_Test", startDateParameter, endDateParameter, employeecodeParameter, loggedUserParameter);
        }
    
        public virtual ObjectResult<rpt_skillmatrix_Result> rpt_skillmatrix(Nullable<int> type, Nullable<int> employeecode, Nullable<int> skillmatrix)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var employeecodeParameter = employeecode.HasValue ?
                new ObjectParameter("employeecode", employeecode) :
                new ObjectParameter("employeecode", typeof(int));
    
            var skillmatrixParameter = skillmatrix.HasValue ?
                new ObjectParameter("skillmatrix", skillmatrix) :
                new ObjectParameter("skillmatrix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_skillmatrix_Result>("rpt_skillmatrix", typeParameter, employeecodeParameter, skillmatrixParameter);
        }
    
        public virtual ObjectResult<rpt_testattendancedetail_Result> rpt_testattendancedetail(Nullable<int> loggedUser)
        {
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_testattendancedetail_Result>("rpt_testattendancedetail", loggedUserParameter);
        }
    
        public virtual ObjectResult<rpt_testattendancetop5_Result> rpt_testattendancetop5(Nullable<int> loggedUser)
        {
            var loggedUserParameter = loggedUser.HasValue ?
                new ObjectParameter("LoggedUser", loggedUser) :
                new ObjectParameter("LoggedUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_testattendancetop5_Result>("rpt_testattendancetop5", loggedUserParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        [DbFunction("PhoenixEntities", "Split")]
        public virtual IQueryable<string> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[PhoenixEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int TruncateTableProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TruncateTableProcedure");
        }
    
        public virtual ObjectResult<GetAllActiveEmployee_Result> GetAllActiveEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllActiveEmployee_Result>("GetAllActiveEmployee");
        }
    
        public virtual ObjectResult<GetAllEligibleEmployees_Result> GetAllEligibleEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEligibleEmployees_Result>("GetAllEligibleEmployees");
        }

        public virtual ObjectResult<rpt_AppraisalReport_Result> rpt_AppraisalReport(Nullable<int> status, Nullable<int> grade, string location, Nullable<int> empId, Nullable<int> year)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));

            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));

            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));

            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_AppraisalReport_Result>("rpt_AppraisalReport", statusParameter, gradeParameter, locationParameter, empIdParameter, yearParameter);
        }

        public virtual ObjectResult<rpt_PendingAppraisalStatus_Result> rpt_PendingAppraisalStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_PendingAppraisalStatus_Result>("rpt_PendingAppraisalStatus");
        }
    
        public virtual int bulksiso(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> userid, string comments, Nullable<int> loggedInuser)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var loggedInuserParameter = loggedInuser.HasValue ?
                new ObjectParameter("loggedInuser", loggedInuser) :
                new ObjectParameter("loggedInuser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bulksiso", startdateParameter, enddateParameter, useridParameter, commentsParameter, loggedInuserParameter);
        }
    
        public virtual ObjectResult<GetCelebrationList_Result> GetCelebrationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCelebrationList_Result>("GetCelebrationList");
        }
    
        public virtual ObjectResult<Nullable<int>> getPMSActions(Nullable<int> personId, Nullable<int> project)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getPMSActions", personIdParameter, projectParameter);
        }
    
        public virtual ObjectResult<getPMSUserActions_Result> getPMSUserActions(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPMSUserActions_Result>("getPMSUserActions", personIdParameter);
        }
    
        public virtual int EmployeeConversion(Nullable<int> oldID, Nullable<int> newID, string firstname, string lastname, string middlename, Nullable<System.DateTime> joiningDate, Nullable<int> designationid, Nullable<System.DateTime> probationreviewdate, string emailID, Nullable<bool> rejoinedwithinyear, string emptype, Nullable<int> employmentstatus, Nullable<int> deliveryunit, Nullable<int> officeLocation, Nullable<int> worklocation, Nullable<int> exitprocessmanager, Nullable<int> reportingto)
        {
            var oldIDParameter = oldID.HasValue ?
                new ObjectParameter("oldID", oldID) :
                new ObjectParameter("oldID", typeof(int));
    
            var newIDParameter = newID.HasValue ?
                new ObjectParameter("newID", newID) :
                new ObjectParameter("newID", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var middlenameParameter = middlename != null ?
                new ObjectParameter("middlename", middlename) :
                new ObjectParameter("middlename", typeof(string));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("joiningDate", joiningDate) :
                new ObjectParameter("joiningDate", typeof(System.DateTime));
    
            var designationidParameter = designationid.HasValue ?
                new ObjectParameter("designationid", designationid) :
                new ObjectParameter("designationid", typeof(int));
    
            var probationreviewdateParameter = probationreviewdate.HasValue ?
                new ObjectParameter("probationreviewdate", probationreviewdate) :
                new ObjectParameter("probationreviewdate", typeof(System.DateTime));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("emailID", emailID) :
                new ObjectParameter("emailID", typeof(string));
    
            var rejoinedwithinyearParameter = rejoinedwithinyear.HasValue ?
                new ObjectParameter("rejoinedwithinyear", rejoinedwithinyear) :
                new ObjectParameter("rejoinedwithinyear", typeof(bool));
    
            var emptypeParameter = emptype != null ?
                new ObjectParameter("emptype", emptype) :
                new ObjectParameter("emptype", typeof(string));
    
            var employmentstatusParameter = employmentstatus.HasValue ?
                new ObjectParameter("employmentstatus", employmentstatus) :
                new ObjectParameter("employmentstatus", typeof(int));
    
            var deliveryunitParameter = deliveryunit.HasValue ?
                new ObjectParameter("deliveryunit", deliveryunit) :
                new ObjectParameter("deliveryunit", typeof(int));
    
            var officeLocationParameter = officeLocation.HasValue ?
                new ObjectParameter("OfficeLocation", officeLocation) :
                new ObjectParameter("OfficeLocation", typeof(int));
    
            var worklocationParameter = worklocation.HasValue ?
                new ObjectParameter("worklocation", worklocation) :
                new ObjectParameter("worklocation", typeof(int));
    
            var exitprocessmanagerParameter = exitprocessmanager.HasValue ?
                new ObjectParameter("exitprocessmanager", exitprocessmanager) :
                new ObjectParameter("exitprocessmanager", typeof(int));
    
            var reportingtoParameter = reportingto.HasValue ?
                new ObjectParameter("reportingto", reportingto) :
                new ObjectParameter("reportingto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeConversion", oldIDParameter, newIDParameter, firstnameParameter, lastnameParameter, middlenameParameter, joiningDateParameter, designationidParameter, probationreviewdateParameter, emailIDParameter, rejoinedwithinyearParameter, emptypeParameter, employmentstatusParameter, deliveryunitParameter, officeLocationParameter, worklocationParameter, exitprocessmanagerParameter, reportingtoParameter);
        }

        //public virtual int rpt_BGCompatibility(string projectID)
        //{
        //    var projectIDParameter = projectID != null ?
        //        new ObjectParameter("projectID", projectID) :
        //        new ObjectParameter("projectID", typeof(string));

        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_BGCompatibility", projectIDParameter);
        //}

        //public virtual ObjectResult<rpt_CustomerBGCList_Result> rpt_CustomerBGCList(string filterType, string filterValue)
        //{
        //    var filterTypeParameter = filterType != null ?
        //        new ObjectParameter("FilterType", filterType) :
        //        new ObjectParameter("FilterType", typeof(string));

        //    var filterValueParameter = filterValue != null ?
        //        new ObjectParameter("FilterValue", filterValue) :
        //        new ObjectParameter("FilterValue", typeof(string));

        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_CustomerBGCList_Result>("rpt_CustomerBGCList", filterTypeParameter, filterValueParameter);
        //}

        public virtual int rpt_EmployeeBGStatus(string filterType, string filterValue)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterValueParameter = filterValue != null ?
                new ObjectParameter("FilterValue", filterValue) :
                new ObjectParameter("FilterValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_EmployeeBGStatus", filterTypeParameter, filterValueParameter);
        }
    
        public virtual ObjectResult<rpt_RMGObjective_Result> rpt_RMGObjective(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RMGObjective_Result>("rpt_RMGObjective", startDateParameter, endDateParameter);
        }
    
        public virtual int rpt_Allocation(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> deliveryunit)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deliveryunitParameter = deliveryunit.HasValue ?
                new ObjectParameter("deliveryunit", deliveryunit) :
                new ObjectParameter("deliveryunit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_Allocation", startDateParameter, endDateParameter, deliveryunitParameter);
        }
    
        public virtual ObjectResult<rpt_Current_Allocation1_Result> rpt_Current_Allocation1(Nullable<int> deliveryUnit)
        {
            var deliveryUnitParameter = deliveryUnit.HasValue ?
                new ObjectParameter("DeliveryUnit", deliveryUnit) :
                new ObjectParameter("DeliveryUnit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_Current_Allocation1_Result>("rpt_Current_Allocation1", deliveryUnitParameter);
        }
    
        public virtual ObjectResult<rpt_VW_Allocation_Result> rpt_VW_Allocation(Nullable<int> officeLocation, Nullable<int> deliveryUnit)
        {
            var officeLocationParameter = officeLocation.HasValue ?
                new ObjectParameter("OfficeLocation", officeLocation) :
                new ObjectParameter("OfficeLocation", typeof(int));
    
            var deliveryUnitParameter = deliveryUnit.HasValue ?
                new ObjectParameter("DeliveryUnit", deliveryUnit) :
                new ObjectParameter("DeliveryUnit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_VW_Allocation_Result>("rpt_VW_Allocation", officeLocationParameter, deliveryUnitParameter);
        }
    
        public virtual int rpt_VW_Monthly_Allocation(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> deliveryunit)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deliveryunitParameter = deliveryunit.HasValue ?
                new ObjectParameter("deliveryunit", deliveryunit) :
                new ObjectParameter("deliveryunit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_VW_Monthly_Allocation", startDateParameter, endDateParameter, deliveryunitParameter);
        }
           
        public virtual ObjectResult<GetAllReportsByPersonId_Result> GetAllReportsByPersonId(Nullable<int> personId, Nullable<int> parentReportId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            var parentReportIdParameter = parentReportId.HasValue ?
                new ObjectParameter("parentReportId", parentReportId) :
                new ObjectParameter("parentReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllReportsByPersonId_Result>("GetAllReportsByPersonId", personIdParameter, parentReportIdParameter);
        }
    
        public virtual ObjectResult<GetLeaveforApprovals_Result> GetLeaveforApprovals(Nullable<int> approverid)
        {
            var approveridParameter = approverid.HasValue ?
                new ObjectParameter("approverid", approverid) :
                new ObjectParameter("approverid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveforApprovals_Result>("GetLeaveforApprovals", approveridParameter);
        }

        public virtual ObjectResult<rpt_leavetransaction_recon_Result> rpt_leavetransaction_recon(string userID, string leaveType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_leavetransaction_recon_Result>("rpt_leavetransaction_recon", userIDParameter, leaveTypeParameter, startDateParameter, endDateParameter);
        }

        public virtual ObjectResult<GetLeaveData_Result> GetLeaveData(Nullable<int> id, Nullable<int> year)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveData_Result>("GetLeaveData", idParameter, yearParameter);
        }

        public virtual ObjectResult<GetReportForResignationData_Result> GetReportForResignationData(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportForResignationData_Result>("GetReportForResignationData", startDateParameter, endDateParameter);
        }



        public virtual ObjectResult<KRAInitiationStatus_Result> KRAInitiationStatus(Nullable<int> personID, Nullable<int> year)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KRAInitiationStatus_Result>("KRAInitiationStatus", personIDParameter, yearParameter);
        }

        public virtual ObjectResult<GetCycleConfiguration_Result> GetCycleConfiguration(Nullable<int> personId, Nullable<int> year)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCycleConfiguration_Result>("GetCycleConfiguration", personIdParameter, yearParameter);
        }

        public virtual int MarkAsInvalid(Nullable<bool> isValid, string comments, Nullable<int> kraGoalId)
        {
            var isValidParameter = isValid.HasValue ?
                new ObjectParameter("IsValid", isValid) :
                new ObjectParameter("IsValid", typeof(bool));

            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));

            var kraGoalIdParameter = kraGoalId.HasValue ?
                new ObjectParameter("kraGoalId", kraGoalId) :
                new ObjectParameter("kraGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkAsInvalid", isValidParameter, commentsParameter, kraGoalIdParameter);
        }

        public virtual ObjectResult<GetActiveKRAByPersonId_Result> GetActiveKRAByPersonId(Nullable<int> personId, Nullable<int> yearId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var yearIdParameter = yearId.HasValue ?
                new ObjectParameter("yearId", yearId) :
                new ObjectParameter("yearId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActiveKRAByPersonId_Result>("GetActiveKRAByPersonId", personIdParameter, yearIdParameter);
        }

        public virtual ObjectResult<GetKRADetails_Result> GetKRADetails(Nullable<int> personId, Nullable<int> id)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRADetails_Result>("GetKRADetails", personIdParameter, idParameter);
        }

        public virtual int MarkAsDone(Nullable<int> personId, Nullable<bool> isKRADone, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> kRADoneOn, Nullable<int> kraGoalId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var isKRADoneParameter = isKRADone.HasValue ?
                new ObjectParameter("isKRADone", isKRADone) :
                new ObjectParameter("isKRADone", typeof(bool));

            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));

            var kRADoneOnParameter = kRADoneOn.HasValue ?
                new ObjectParameter("KRADoneOn", kRADoneOn) :
                new ObjectParameter("KRADoneOn", typeof(System.DateTime));

            var kraGoalIdParameter = kraGoalId.HasValue ?
                new ObjectParameter("kraGoalId", kraGoalId) :
                new ObjectParameter("kraGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkAsDone", personIdParameter, isKRADoneParameter, modifiedOnParameter, kRADoneOnParameter, kraGoalIdParameter);
        }

        public virtual ObjectResult<GetProjectAssignedWithOtherList_Result> GetProjectAssignedWithOtherList(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectAssignedWithOtherList_Result>("GetProjectAssignedWithOtherList", personIdParameter);
        }

        public virtual int ApprovePSISO(Nullable<int> approverID, string iDs)
        {
            var approverIDParameter = approverID.HasValue ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(int));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApprovePSISO", approverIDParameter, iDsParameter);
        }
    
        public virtual int RejectPSISO(Nullable<int> approverID, string iDs, string rejectComment)
        {
            var approverIDParameter = approverID.HasValue ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(int));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            var rejectCommentParameter = rejectComment != null ?
                new ObjectParameter("RejectComment", rejectComment) :
                new ObjectParameter("RejectComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RejectPSISO", approverIDParameter, iDsParameter, rejectCommentParameter);
        }
    
        public virtual int ApproveePSISO_Person(Nullable<int> approverID, string iDs)
        {
            var approverIDParameter = approverID.HasValue ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(int));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApproveePSISO_Person", approverIDParameter, iDsParameter);
        }
    
        public virtual int RejectPSISO_Person(Nullable<int> approverID, string iDs, string rejectComment)
        {
            var approverIDParameter = approverID.HasValue ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(int));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            var rejectCommentParameter = rejectComment != null ?
                new ObjectParameter("RejectComment", rejectComment) :
                new ObjectParameter("RejectComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RejectPSISO_Person", approverIDParameter, iDsParameter, rejectCommentParameter);
        }
    
        public virtual ObjectResult<GetSISOPendingApprovalDateWise_Result> GetSISOPendingApprovalDateWise(string approverID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var approverIDParameter = approverID != null ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSISOPendingApprovalDateWise_Result>("GetSISOPendingApprovalDateWise", approverIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSISOPendingApprovalUserWise_Result> GetSISOPendingApprovalUserWise(string approverID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var approverIDParameter = approverID != null ?
                new ObjectParameter("ApproverID", approverID) :
                new ObjectParameter("ApproverID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSISOPendingApprovalUserWise_Result>("GetSISOPendingApprovalUserWise", approverIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int DeleteSISO_ForLeave(Nullable<int> personID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveComment)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveCommentParameter = leaveComment != null ?
                new ObjectParameter("LeaveComment", leaveComment) :
                new ObjectParameter("LeaveComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSISO_ForLeave", personIDParameter, fromDateParameter, toDateParameter, leaveCommentParameter);
        }
    
        public virtual int RestoreSISO_ForLeave(Nullable<int> personID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreSISO_ForLeave", personIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Bulk_SignInSignOut(Nullable<int> ipUserID, Nullable<System.DateTime> ipFromDate, Nullable<System.DateTime> ipToDate)
        {
            var ipUserIDParameter = ipUserID.HasValue ?
                new ObjectParameter("ipUserID", ipUserID) :
                new ObjectParameter("ipUserID", typeof(int));
    
            var ipFromDateParameter = ipFromDate.HasValue ?
                new ObjectParameter("ipFromDate", ipFromDate) :
                new ObjectParameter("ipFromDate", typeof(System.DateTime));
    
            var ipToDateParameter = ipToDate.HasValue ?
                new ObjectParameter("ipToDate", ipToDate) :
                new ObjectParameter("ipToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bulk_SignInSignOut", ipUserIDParameter, ipFromDateParameter, ipToDateParameter);
        }
    
        public virtual ObjectResult<string> GetRoleWiseEmailIds(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRoleWiseEmailIds", roleIdParameter);
        }
    
        public virtual int UpdateSISOAutoSignOut()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSISOAutoSignOut");
        }
    
        public virtual ObjectResult<rpt_RAPercentage_sheet1_Result> rpt_RAPercentage_sheet1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RAPercentage_sheet1_Result>("rpt_RAPercentage_sheet1");
        }
    
        public virtual ObjectResult<rpt_RAPercentage_sheet2_Result> rpt_RAPercentage_sheet2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_RAPercentage_sheet2_Result>("rpt_RAPercentage_sheet2");
        }
    
        public virtual ObjectResult<GetCelebrationListForBirthDate_Result> GetCelebrationListForBirthDate(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCelebrationListForBirthDate_Result>("GetCelebrationListForBirthDate", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetCelebrationListForWeddingDate_Result> GetCelebrationListForWeddingDate(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCelebrationListForWeddingDate_Result>("GetCelebrationListForWeddingDate", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetCelebrationListForWorkAnniversary_Result> GetCelebrationListForWorkAnniversary(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCelebrationListForWorkAnniversary_Result>("GetCelebrationListForWorkAnniversary", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSISOAttendanceRpt_Result> GetSISOAttendanceRpt(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> filterType, Nullable<int> employeeCode, Nullable<int> manageCode, Nullable<int> deliveryUnitId, Nullable<int> deliveryTeamId, Nullable<int> workLocationId, Nullable<int> officeLocationId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            var employeeCodeParameter = employeeCode.HasValue ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(int));
    
            var manageCodeParameter = manageCode.HasValue ?
                new ObjectParameter("ManageCode", manageCode) :
                new ObjectParameter("ManageCode", typeof(int));

            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(string));

            var deliveryTeamIdParameter = deliveryTeamId.HasValue ?
                new ObjectParameter("DeliveryTeamId", deliveryTeamId) :
                new ObjectParameter("DeliveryTeamId", typeof(string));

            var workLocationIdParameter = workLocationId.HasValue ?
                new ObjectParameter("WorkLocationId", workLocationId) :
                new ObjectParameter("WorkLocationId", typeof(int));
    
            var officeLocationIdParameter = officeLocationId.HasValue ?
                new ObjectParameter("OfficeLocationId", officeLocationId) :
                new ObjectParameter("OfficeLocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSISOAttendanceRpt_Result>("GetSISOAttendanceRpt", startDateParameter, endDateParameter, filterTypeParameter, employeeCodeParameter, manageCodeParameter, deliveryUnitIdParameter, deliveryTeamIdParameter, workLocationIdParameter, officeLocationIdParameter);
        }

        public virtual ObjectResult<GetTimesheetCustomReport_Default_Result> GetTimesheetCustomReport_Default(Nullable<int> duID, Nullable<int> projectID, Nullable<int> subProjectID, Nullable<int> employeeID, Nullable<int> billable, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var duIDParameter = duID.HasValue ?
                new ObjectParameter("DuID", duID) :
                new ObjectParameter("DuID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var subProjectIDParameter = subProjectID.HasValue ?
                new ObjectParameter("SubProjectID", subProjectID) :
                new ObjectParameter("SubProjectID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billableParameter = billable.HasValue ?
                new ObjectParameter("Billable", billable) :
                new ObjectParameter("Billable", typeof(int));

            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));

            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetCustomReport_Default_Result>("GetTimesheetCustomReport_Default", duIDParameter, projectIDParameter, subProjectIDParameter, employeeIDParameter, billableParameter, sDateParameter, eDateParameter);
        }

        public virtual ObjectResult<GetTimesheetCustomReport_DULevel_Result> GetTimesheetCustomReport_DULevel(Nullable<int> duID, Nullable<int> projectID, Nullable<int> subProjectID, Nullable<int> employeeID, Nullable<int> billable, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var duIDParameter = duID.HasValue ?
                new ObjectParameter("DuID", duID) :
                new ObjectParameter("DuID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var subProjectIDParameter = subProjectID.HasValue ?
                new ObjectParameter("SubProjectID", subProjectID) :
                new ObjectParameter("SubProjectID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billableParameter = billable.HasValue ?
                new ObjectParameter("Billable", billable) :
                new ObjectParameter("Billable", typeof(int));

            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));

            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetCustomReport_DULevel_Result>("GetTimesheetCustomReport_DULevel", duIDParameter, projectIDParameter, subProjectIDParameter, employeeIDParameter, billableParameter, sDateParameter, eDateParameter);
        }

        public virtual ObjectResult<GetTimesheetCustomReport_IndividualOverall_Result> GetTimesheetCustomReport_IndividualOverall(Nullable<int> duID, Nullable<int> projectID, Nullable<int> subProjectID, Nullable<int> employeeID, Nullable<int> billable, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var duIDParameter = duID.HasValue ?
                new ObjectParameter("DuID", duID) :
                new ObjectParameter("DuID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var subProjectIDParameter = subProjectID.HasValue ?
                new ObjectParameter("SubProjectID", subProjectID) :
                new ObjectParameter("SubProjectID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billableParameter = billable.HasValue ?
                new ObjectParameter("Billable", billable) :
                new ObjectParameter("Billable", typeof(int));

            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));

            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetCustomReport_IndividualOverall_Result>("GetTimesheetCustomReport_IndividualOverall", duIDParameter, projectIDParameter, subProjectIDParameter, employeeIDParameter, billableParameter, sDateParameter, eDateParameter);
        }

        public virtual ObjectResult<GetTimesheetCustomReport_IndividualWithProject_Result> GetTimesheetCustomReport_IndividualWithProject(Nullable<int> duID, Nullable<int> projectID, Nullable<int> subProjectID, Nullable<int> employeeID, Nullable<int> billable, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var duIDParameter = duID.HasValue ?
                new ObjectParameter("DuID", duID) :
                new ObjectParameter("DuID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var subProjectIDParameter = subProjectID.HasValue ?
                new ObjectParameter("SubProjectID", subProjectID) :
                new ObjectParameter("SubProjectID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billableParameter = billable.HasValue ?
                new ObjectParameter("Billable", billable) :
                new ObjectParameter("Billable", typeof(int));

            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));

            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetCustomReport_IndividualWithProject_Result>("GetTimesheetCustomReport_IndividualWithProject", duIDParameter, projectIDParameter, subProjectIDParameter, employeeIDParameter, billableParameter, sDateParameter, eDateParameter);
        }

        public virtual ObjectResult<GetTimesheetCustomReport_ProjectLevel_Result> GetTimesheetCustomReport_ProjectLevel(Nullable<int> duID, Nullable<int> projectID, Nullable<int> subProjectID, Nullable<int> employeeID, Nullable<int> billable, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var duIDParameter = duID.HasValue ?
                new ObjectParameter("DuID", duID) :
                new ObjectParameter("DuID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var subProjectIDParameter = subProjectID.HasValue ?
                new ObjectParameter("SubProjectID", subProjectID) :
                new ObjectParameter("SubProjectID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billableParameter = billable.HasValue ?
                new ObjectParameter("Billable", billable) :
                new ObjectParameter("Billable", typeof(int));

            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));

            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetCustomReport_ProjectLevel_Result>("GetTimesheetCustomReport_ProjectLevel", duIDParameter, projectIDParameter, subProjectIDParameter, employeeIDParameter, billableParameter, sDateParameter, eDateParameter);
        }
        public virtual ObjectResult<GetTimesheetByProjectID_Result> GetTimesheetByProjectID(Nullable<int> userID, Nullable<int> managerID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("ManagerID", managerID) :
                new ObjectParameter("ManagerID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetByProjectID_Result>("GetTimesheetByProjectID", userIDParameter, managerIDParameter, startDateParameter, endDateParameter);
        }   
        public virtual ObjectResult<GetEmpListByProjManager_Result> GetEmpListByProjManager(Nullable<int> managerId)
        {
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpListByProjManager_Result>("GetEmpListByProjManager", managerIdParameter);
        }
        public virtual ObjectResult<GetTimesheetList_Result> GetTimesheetList(Nullable<int> personID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimesheetList_Result>("GetTimesheetList", personIDParameter, startDateParameter, endDateParameter);
        }
        public virtual int GetProjDetailsByPMandDM(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProjDetailsByPMandDM", userIDParameter);
        }

        public virtual int SaveOrUpdateKRA(Nullable<int> id, Nullable<int> kRACategoryId, Nullable<int> personId, string kRA, Nullable<int> yearId, string description, Nullable<int> weightage, Nullable<int> parentKRAId, Nullable<bool> q1, Nullable<bool> q2, Nullable<bool> q3, Nullable<bool> q4, Nullable<int> kRAInitiationId, string comments, Nullable<int> kRAPercentageCompletion, Nullable<System.DateTime> kRAStartDate, Nullable<System.DateTime> kRAEndDate, Nullable<System.DateTime> kRAInitiationEndDate, Nullable<bool> isCloned, Nullable<int> createdBy, Nullable<int> modifiedBy, Nullable<int> KRAClonedBy, Nullable<System.DateTime> KRAClonedDate, Nullable<System.DateTime> KRAHistoryClonedDate, Nullable<int> KRAHistoryClonedBy, Nullable<int> KRAHistoryId, Nullable<bool> IsClonedFromHistory, Nullable<int> KRAGoalId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var kRACategoryIdParameter = kRACategoryId.HasValue ?
                new ObjectParameter("KRACategoryId", kRACategoryId) :
                new ObjectParameter("KRACategoryId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var kRAParameter = kRA != null ?
                new ObjectParameter("KRA", kRA) :
                new ObjectParameter("KRA", typeof(string));
    
            var yearIdParameter = yearId.HasValue ?
                new ObjectParameter("YearId", yearId) :
                new ObjectParameter("YearId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightageParameter = weightage.HasValue ?
                new ObjectParameter("Weightage", weightage) :
                new ObjectParameter("Weightage", typeof(int));
    
            var parentKRAIdParameter = parentKRAId.HasValue ?
                new ObjectParameter("ParentKRAId", parentKRAId) :
                new ObjectParameter("ParentKRAId", typeof(int));
    
            var q1Parameter = q1.HasValue ?
                new ObjectParameter("Q1", q1) :
                new ObjectParameter("Q1", typeof(bool));
    
            var q2Parameter = q2.HasValue ?
                new ObjectParameter("Q2", q2) :
                new ObjectParameter("Q2", typeof(bool));
    
            var q3Parameter = q3.HasValue ?
                new ObjectParameter("Q3", q3) :
                new ObjectParameter("Q3", typeof(bool));
    
            var q4Parameter = q4.HasValue ?
                new ObjectParameter("Q4", q4) :
                new ObjectParameter("Q4", typeof(bool));
    
            var kRAInitiationIdParameter = kRAInitiationId.HasValue ?
                new ObjectParameter("KRAInitiationId", kRAInitiationId) :
                new ObjectParameter("KRAInitiationId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));

            var kRAPercentageCompletionParameter = kRAPercentageCompletion.HasValue ?
                new ObjectParameter("KRAPercentageCompletion", kRAPercentageCompletion) :
                new ObjectParameter("KRAPercentageCompletion", typeof(int));

            var kRAStartDateParameter = kRAStartDate.HasValue ?
                new ObjectParameter("KRAStartDate", kRAStartDate) :
                new ObjectParameter("KRAStartDate", typeof(System.DateTime));
    
            var kRAEndDateParameter = kRAEndDate.HasValue ?
                new ObjectParameter("KRAEndDate", kRAEndDate) :
                new ObjectParameter("KRAEndDate", typeof(System.DateTime));
    
            var kRAInitiationEndDateParameter = kRAInitiationEndDate.HasValue ?
                new ObjectParameter("KRAInitiationEndDate", kRAInitiationEndDate) :
                new ObjectParameter("KRAInitiationEndDate", typeof(System.DateTime));
    
            var isClonedParameter = isCloned.HasValue ?
                new ObjectParameter("IsCloned", isCloned) :
                new ObjectParameter("IsCloned", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));

            var KRAClonedByParameter = KRAClonedBy.HasValue ?
                new ObjectParameter("KRAClonedBy", KRAClonedBy) :
                new ObjectParameter("KRAClonedBy", typeof(int));

            var KRAClonedDateParameter = KRAClonedDate.HasValue ?
                new ObjectParameter("KRAClonedDate", KRAClonedDate) :
                new ObjectParameter("KRAClonedDate", typeof(System.DateTime));

            var KRAHistoryClonedDateParameter = KRAHistoryClonedDate.HasValue ?
                new ObjectParameter("KRAHistoryClonedDate", KRAHistoryClonedDate) :
                new ObjectParameter("KRAHistoryClonedDate", typeof(System.DateTime));

            var KRAHistoryClonedByParameter = KRAHistoryClonedBy.HasValue ?
                new ObjectParameter("KRAHistoryClonedBy", KRAClonedBy) :
                new ObjectParameter("KRAHistoryClonedBy", typeof(int));

            var KRAHistoryIdParameter = KRAHistoryId.HasValue ?
                new ObjectParameter("KRAHistoryId", KRAHistoryId) :
                new ObjectParameter("KRAHistoryId", typeof(int));

            var IsClonedFromHistoryParameter = IsClonedFromHistory.HasValue ?
                new ObjectParameter("IsClonedFromHistory", IsClonedFromHistory) :
                new ObjectParameter("IsClonedFromHistory", typeof(bool));

            var KRAGoalIdParameter = KRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", KRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveOrUpdateKRA", idParameter, kRACategoryIdParameter, personIdParameter, kRAParameter, yearIdParameter, descriptionParameter, weightageParameter, parentKRAIdParameter, q1Parameter, q2Parameter, q3Parameter, q4Parameter, kRAInitiationIdParameter, commentsParameter, kRAPercentageCompletionParameter, kRAStartDateParameter, kRAEndDateParameter, kRAInitiationEndDateParameter, isClonedParameter, createdByParameter, modifiedByParameter, KRAClonedByParameter, KRAClonedDateParameter, KRAHistoryClonedDateParameter, KRAHistoryClonedByParameter, KRAHistoryIdParameter, IsClonedFromHistoryParameter, KRAGoalIdParameter);
        }

        public virtual int SaveUpdateKRAProgress(Nullable<int> id, Nullable<int> kRAId, string vibrantName, string comment, Nullable<int> createdBy, Nullable<int> modifiedBy, Nullable<int> kRAGoalId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var kRAIdParameter = kRAId.HasValue ?
                new ObjectParameter("KRAId", kRAId) :
                new ObjectParameter("KRAId", typeof(int));

            var vibrantNameParameter = vibrantName != null ?
                new ObjectParameter("VibrantName", vibrantName) :
                new ObjectParameter("VibrantName", typeof(string));

            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));

            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));

            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveUpdateKRAProgress", idParameter, kRAIdParameter, vibrantNameParameter, commentParameter, createdByParameter, modifiedByParameter, kRAGoalIdParameter);
        }

        public virtual int DeleteKRAProgressEntry(Nullable<int> id, Nullable<int> modifiedBy, Nullable<int> kRAGoalId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteKRAProgressEntry", idParameter, modifiedByParameter, kRAGoalIdParameter);
        }

        public virtual ObjectResult<GetActiveOrEligibleListForKRA_Result> GetActiveOrEligibleListForKRA(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActiveOrEligibleListForKRA_Result>("GetActiveOrEligibleListForKRA", typeParameter);
        }

        public virtual ObjectResult<GetKRAAllocatedEmployeesByReviewerId_Result> GetKRAAllocatedEmployeesByReviewerId(Nullable<int> reviewerId, Nullable<int> year)
        {
            var reviewerIdParameter = reviewerId.HasValue ?
                new ObjectParameter("reviewerId", reviewerId) :
                new ObjectParameter("reviewerId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRAAllocatedEmployeesByReviewerId_Result>("GetKRAAllocatedEmployeesByReviewerId", reviewerIdParameter, yearParameter);
        }

        public virtual int ChangeKRAReviewerById(Nullable<int> kraInitiationId, Nullable<int> year, Nullable<int> newReviewerId)
        {
            var kraInitiationIdParameter = kraInitiationId.HasValue ?
                new ObjectParameter("kraInitiationId", kraInitiationId) :
                new ObjectParameter("kraInitiationId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var newReviewerIdParameter = newReviewerId.HasValue ?
                new ObjectParameter("newReviewerId", newReviewerId) :
                new ObjectParameter("newReviewerId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeKRAReviewerById", kraInitiationIdParameter, yearParameter, newReviewerIdParameter);
        }

        public virtual ObjectResult<GetCategoryList_Result> GetCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryList_Result>("GetCategoryList");
        }

        public virtual ObjectResult<GetGradeList_Result> GetGradeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradeList_Result>("GetGradeList");
        }

        public virtual ObjectResult<GetProgressListById_Result> GetProgressListById(Nullable<int> kRAGoalId)
        {
            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));          

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgressListById_Result>("GetProgressListById", kRAGoalIdParameter);
        }

        public virtual int InitiatePersonKRA(Nullable<int> personId, Nullable<int> kRAYearId, Nullable<bool> q1, Nullable<bool> q2, Nullable<bool> q3, Nullable<bool> q4, Nullable<int> reviewerPersonId, Nullable<System.DateTime> firstKRAInitiatedOn, Nullable<System.DateTime> firstKRAInitiationStartDate, Nullable<System.DateTime> firstKRAInitiationEndDate, Nullable<int> firstKRAInitiatedBy, Nullable<System.DateTime> firstKRAInitiationFreezedDate, Nullable<int> firstKRAInitiationFreezedBy, Nullable<bool> isFirstKRAInitiationFreezed, Nullable<System.DateTime> secondKRAInitiatedOn, Nullable<System.DateTime> secondKRAInitiationStartDate, Nullable<System.DateTime> secondKRAInitiationEndDate, Nullable<int> secondKRAInitiatedBy, Nullable<System.DateTime> secondKRAInitiationFreezedDate, Nullable<int> secondKRAInitiationFreezedBy, Nullable<bool> isSecondKRAInitiationFreezed, Nullable<System.DateTime> thirdKRAInitiatedOn, Nullable<System.DateTime> thirdKRAInitiationStartDate, Nullable<System.DateTime> thirdKRAInitiationEndDate, Nullable<int> thirdKRAInitiatedBy, Nullable<System.DateTime> thirdKRAInitiationFreezedDate, Nullable<int> thirdKRAInitiationFreezedBy, Nullable<bool> isThirdKRAInitiationFreezed, Nullable<System.DateTime> fourthKRAInitiatedOn, Nullable<System.DateTime> fourthKRAInitiationStartDate, Nullable<System.DateTime> fourthKRAInitiationEndDate, Nullable<int> fourthKRAInitiatedBy, Nullable<System.DateTime> fourthKRAInitiationFreezedDate, Nullable<int> fourthKRAInitiationFreezedBy, Nullable<bool> isFourthKRAInitiationFreezed, Nullable<int> firstKRAInitiationPercentageCompletion, Nullable<int> secondKRAInitiationPercentageCompletion, Nullable<int> thirdKRAInitiationPercentageCompletion, Nullable<int> fourthKRAInitiationPercentageCompletion, Nullable<int> overAllYearlyPercentageCompletion, Nullable<int> q1InitiatedFor, Nullable<int> q2InitiatedFor, Nullable<int> q3InitiatedFor, Nullable<int> q4InitiatiedFor, Nullable<int> cycle)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            var kRAYearIdParameter = kRAYearId.HasValue ?
                new ObjectParameter("KRAYearId", kRAYearId) :
                new ObjectParameter("KRAYearId", typeof(int));

            var q1Parameter = q1.HasValue ?
                new ObjectParameter("Q1", q1) :
                new ObjectParameter("Q1", typeof(bool));

            var q2Parameter = q2.HasValue ?
                new ObjectParameter("Q2", q2) :
                new ObjectParameter("Q2", typeof(bool));

            var q3Parameter = q3.HasValue ?
                new ObjectParameter("Q3", q3) :
                new ObjectParameter("Q3", typeof(bool));

            var q4Parameter = q4.HasValue ?
                new ObjectParameter("Q4", q4) :
                new ObjectParameter("Q4", typeof(bool));

            var reviewerPersonIdParameter = reviewerPersonId.HasValue ?
                new ObjectParameter("ReviewerPersonId", reviewerPersonId) :
                new ObjectParameter("ReviewerPersonId", typeof(int));

            var firstKRAInitiatedOnParameter = firstKRAInitiatedOn.HasValue ?
                new ObjectParameter("FirstKRAInitiatedOn", firstKRAInitiatedOn) :
                new ObjectParameter("FirstKRAInitiatedOn", typeof(System.DateTime));

            var firstKRAInitiationStartDateParameter = firstKRAInitiationStartDate.HasValue ?
                new ObjectParameter("FirstKRAInitiationStartDate", firstKRAInitiationStartDate) :
                new ObjectParameter("FirstKRAInitiationStartDate", typeof(System.DateTime));

            var firstKRAInitiationEndDateParameter = firstKRAInitiationEndDate.HasValue ?
                new ObjectParameter("FirstKRAInitiationEndDate", firstKRAInitiationEndDate) :
                new ObjectParameter("FirstKRAInitiationEndDate", typeof(System.DateTime));

            var firstKRAInitiatedByParameter = firstKRAInitiatedBy.HasValue ?
                new ObjectParameter("FirstKRAInitiatedBy", firstKRAInitiatedBy) :
                new ObjectParameter("FirstKRAInitiatedBy", typeof(int));

            var firstKRAInitiationFreezedDateParameter = firstKRAInitiationFreezedDate.HasValue ?
                new ObjectParameter("FirstKRAInitiationFreezedDate", firstKRAInitiationFreezedDate) :
                new ObjectParameter("FirstKRAInitiationFreezedDate", typeof(System.DateTime));

            var firstKRAInitiationFreezedByParameter = firstKRAInitiationFreezedBy.HasValue ?
                new ObjectParameter("FirstKRAInitiationFreezedBy", firstKRAInitiationFreezedBy) :
                new ObjectParameter("FirstKRAInitiationFreezedBy", typeof(int));

            var isFirstKRAInitiationFreezedParameter = isFirstKRAInitiationFreezed.HasValue ?
                new ObjectParameter("IsFirstKRAInitiationFreezed", isFirstKRAInitiationFreezed) :
                new ObjectParameter("IsFirstKRAInitiationFreezed", typeof(bool));

            var secondKRAInitiatedOnParameter = secondKRAInitiatedOn.HasValue ?
                new ObjectParameter("SecondKRAInitiatedOn", secondKRAInitiatedOn) :
                new ObjectParameter("SecondKRAInitiatedOn", typeof(System.DateTime));

            var secondKRAInitiationStartDateParameter = secondKRAInitiationStartDate.HasValue ?
                new ObjectParameter("SecondKRAInitiationStartDate", secondKRAInitiationStartDate) :
                new ObjectParameter("SecondKRAInitiationStartDate", typeof(System.DateTime));

            var secondKRAInitiationEndDateParameter = secondKRAInitiationEndDate.HasValue ?
                new ObjectParameter("SecondKRAInitiationEndDate", secondKRAInitiationEndDate) :
                new ObjectParameter("SecondKRAInitiationEndDate", typeof(System.DateTime));

            var secondKRAInitiatedByParameter = secondKRAInitiatedBy.HasValue ?
                new ObjectParameter("SecondKRAInitiatedBy", secondKRAInitiatedBy) :
                new ObjectParameter("SecondKRAInitiatedBy", typeof(int));

            var secondKRAInitiationFreezedDateParameter = secondKRAInitiationFreezedDate.HasValue ?
                new ObjectParameter("SecondKRAInitiationFreezedDate", secondKRAInitiationFreezedDate) :
                new ObjectParameter("SecondKRAInitiationFreezedDate", typeof(System.DateTime));

            var secondKRAInitiationFreezedByParameter = secondKRAInitiationFreezedBy.HasValue ?
                new ObjectParameter("SecondKRAInitiationFreezedBy", secondKRAInitiationFreezedBy) :
                new ObjectParameter("SecondKRAInitiationFreezedBy", typeof(int));

            var isSecondKRAInitiationFreezedParameter = isSecondKRAInitiationFreezed.HasValue ?
                new ObjectParameter("IsSecondKRAInitiationFreezed", isSecondKRAInitiationFreezed) :
                new ObjectParameter("IsSecondKRAInitiationFreezed", typeof(bool));

            var thirdKRAInitiatedOnParameter = thirdKRAInitiatedOn.HasValue ?
                new ObjectParameter("ThirdKRAInitiatedOn", thirdKRAInitiatedOn) :
                new ObjectParameter("ThirdKRAInitiatedOn", typeof(System.DateTime));

            var thirdKRAInitiationStartDateParameter = thirdKRAInitiationStartDate.HasValue ?
                new ObjectParameter("ThirdKRAInitiationStartDate", thirdKRAInitiationStartDate) :
                new ObjectParameter("ThirdKRAInitiationStartDate", typeof(System.DateTime));

            var thirdKRAInitiationEndDateParameter = thirdKRAInitiationEndDate.HasValue ?
                new ObjectParameter("ThirdKRAInitiationEndDate", thirdKRAInitiationEndDate) :
                new ObjectParameter("ThirdKRAInitiationEndDate", typeof(System.DateTime));

            var thirdKRAInitiatedByParameter = thirdKRAInitiatedBy.HasValue ?
                new ObjectParameter("ThirdKRAInitiatedBy", thirdKRAInitiatedBy) :
                new ObjectParameter("ThirdKRAInitiatedBy", typeof(int));

            var thirdKRAInitiationFreezedDateParameter = thirdKRAInitiationFreezedDate.HasValue ?
                new ObjectParameter("ThirdKRAInitiationFreezedDate", thirdKRAInitiationFreezedDate) :
                new ObjectParameter("ThirdKRAInitiationFreezedDate", typeof(System.DateTime));

            var thirdKRAInitiationFreezedByParameter = thirdKRAInitiationFreezedBy.HasValue ?
                new ObjectParameter("ThirdKRAInitiationFreezedBy", thirdKRAInitiationFreezedBy) :
                new ObjectParameter("ThirdKRAInitiationFreezedBy", typeof(int));

            var isThirdKRAInitiationFreezedParameter = isThirdKRAInitiationFreezed.HasValue ?
                new ObjectParameter("IsThirdKRAInitiationFreezed", isThirdKRAInitiationFreezed) :
                new ObjectParameter("IsThirdKRAInitiationFreezed", typeof(bool));

            var fourthKRAInitiatedOnParameter = fourthKRAInitiatedOn.HasValue ?
                new ObjectParameter("FourthKRAInitiatedOn", fourthKRAInitiatedOn) :
                new ObjectParameter("FourthKRAInitiatedOn", typeof(System.DateTime));

            var fourthKRAInitiationStartDateParameter = fourthKRAInitiationStartDate.HasValue ?
                new ObjectParameter("FourthKRAInitiationStartDate", fourthKRAInitiationStartDate) :
                new ObjectParameter("FourthKRAInitiationStartDate", typeof(System.DateTime));

            var fourthKRAInitiationEndDateParameter = fourthKRAInitiationEndDate.HasValue ?
                new ObjectParameter("FourthKRAInitiationEndDate", fourthKRAInitiationEndDate) :
                new ObjectParameter("FourthKRAInitiationEndDate", typeof(System.DateTime));

            var fourthKRAInitiatedByParameter = fourthKRAInitiatedBy.HasValue ?
                new ObjectParameter("FourthKRAInitiatedBy", fourthKRAInitiatedBy) :
                new ObjectParameter("FourthKRAInitiatedBy", typeof(int));

            var fourthKRAInitiationFreezedDateParameter = fourthKRAInitiationFreezedDate.HasValue ?
                new ObjectParameter("FourthKRAInitiationFreezedDate", fourthKRAInitiationFreezedDate) :
                new ObjectParameter("FourthKRAInitiationFreezedDate", typeof(System.DateTime));

            var fourthKRAInitiationFreezedByParameter = fourthKRAInitiationFreezedBy.HasValue ?
                new ObjectParameter("FourthKRAInitiationFreezedBy", fourthKRAInitiationFreezedBy) :
                new ObjectParameter("FourthKRAInitiationFreezedBy", typeof(int));

            var isFourthKRAInitiationFreezedParameter = isFourthKRAInitiationFreezed.HasValue ?
                new ObjectParameter("IsFourthKRAInitiationFreezed", isFourthKRAInitiationFreezed) :
                new ObjectParameter("IsFourthKRAInitiationFreezed", typeof(bool));

            var firstKRAInitiationPercentageCompletionParameter = firstKRAInitiationPercentageCompletion.HasValue ?
                new ObjectParameter("FirstKRAInitiationPercentageCompletion", firstKRAInitiationPercentageCompletion) :
                new ObjectParameter("FirstKRAInitiationPercentageCompletion", typeof(int));

            var secondKRAInitiationPercentageCompletionParameter = secondKRAInitiationPercentageCompletion.HasValue ?
                new ObjectParameter("SecondKRAInitiationPercentageCompletion", secondKRAInitiationPercentageCompletion) :
                new ObjectParameter("SecondKRAInitiationPercentageCompletion", typeof(int));

            var thirdKRAInitiationPercentageCompletionParameter = thirdKRAInitiationPercentageCompletion.HasValue ?
                new ObjectParameter("ThirdKRAInitiationPercentageCompletion", thirdKRAInitiationPercentageCompletion) :
                new ObjectParameter("ThirdKRAInitiationPercentageCompletion", typeof(int));

            var fourthKRAInitiationPercentageCompletionParameter = fourthKRAInitiationPercentageCompletion.HasValue ?
                new ObjectParameter("FourthKRAInitiationPercentageCompletion", fourthKRAInitiationPercentageCompletion) :
                new ObjectParameter("FourthKRAInitiationPercentageCompletion", typeof(int));

            var overAllYearlyPercentageCompletionParameter = overAllYearlyPercentageCompletion.HasValue ?
                new ObjectParameter("OverAllYearlyPercentageCompletion", overAllYearlyPercentageCompletion) :
                new ObjectParameter("OverAllYearlyPercentageCompletion", typeof(int));

            var q1InitiatedForParameter = q1InitiatedFor.HasValue ?
                new ObjectParameter("Q1InitiatedFor", q1InitiatedFor) :
                new ObjectParameter("Q1InitiatedFor", typeof(int));

            var q2InitiatedForParameter = q2InitiatedFor.HasValue ?
                new ObjectParameter("Q2InitiatedFor", q2InitiatedFor) :
                new ObjectParameter("Q2InitiatedFor", typeof(int));

            var q3InitiatedForParameter = q3InitiatedFor.HasValue ?
                new ObjectParameter("Q3InitiatedFor", q3InitiatedFor) :
                new ObjectParameter("Q3InitiatedFor", typeof(int));

            var q4InitiatiedForParameter = q4InitiatiedFor.HasValue ?
                new ObjectParameter("Q4InitiatiedFor", q4InitiatiedFor) :
                new ObjectParameter("Q4InitiatiedFor", typeof(int));

            var cycleParameter = cycle.HasValue ?
                new ObjectParameter("cycle", cycle) :
                new ObjectParameter("cycle", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InitiatePersonKRA", personIdParameter, kRAYearIdParameter, q1Parameter, q2Parameter, q3Parameter, q4Parameter, reviewerPersonIdParameter, firstKRAInitiatedOnParameter, firstKRAInitiationStartDateParameter, firstKRAInitiationEndDateParameter, firstKRAInitiatedByParameter, firstKRAInitiationFreezedDateParameter, firstKRAInitiationFreezedByParameter, isFirstKRAInitiationFreezedParameter, secondKRAInitiatedOnParameter, secondKRAInitiationStartDateParameter, secondKRAInitiationEndDateParameter, secondKRAInitiatedByParameter, secondKRAInitiationFreezedDateParameter, secondKRAInitiationFreezedByParameter, isSecondKRAInitiationFreezedParameter, thirdKRAInitiatedOnParameter, thirdKRAInitiationStartDateParameter, thirdKRAInitiationEndDateParameter, thirdKRAInitiatedByParameter, thirdKRAInitiationFreezedDateParameter, thirdKRAInitiationFreezedByParameter, isThirdKRAInitiationFreezedParameter, fourthKRAInitiatedOnParameter, fourthKRAInitiationStartDateParameter, fourthKRAInitiationEndDateParameter, fourthKRAInitiatedByParameter, fourthKRAInitiationFreezedDateParameter, fourthKRAInitiationFreezedByParameter, isFourthKRAInitiationFreezedParameter, firstKRAInitiationPercentageCompletionParameter, secondKRAInitiationPercentageCompletionParameter, thirdKRAInitiationPercentageCompletionParameter, fourthKRAInitiationPercentageCompletionParameter, overAllYearlyPercentageCompletionParameter, q1InitiatedForParameter, q2InitiatedForParameter, q3InitiatedForParameter, q4InitiatiedForParameter, cycleParameter);
        }

        public virtual ObjectResult<Rpt_SearchAllKRADetail_Result> Rpt_SearchAllKRADetail(string personId, string kraCategoryId, string yearId, string weightageId, string quarters, string isValid, string isKRADone)
        {
            var personIdParameter = personId != null ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(string));
    
            var kraCategoryIdParameter = kraCategoryId != null ?
                new ObjectParameter("kraCategoryId", kraCategoryId) :
                new ObjectParameter("kraCategoryId", typeof(string));
    
            var yearIdParameter = yearId != null ?
                new ObjectParameter("yearId", yearId) :
                new ObjectParameter("yearId", typeof(string));
    
            var weightageIdParameter = weightageId != null ?
                new ObjectParameter("weightageId", weightageId) :
                new ObjectParameter("weightageId", typeof(string));
    
            var quartersParameter = quarters != null ?
                new ObjectParameter("quarters", quarters) :
                new ObjectParameter("quarters", typeof(string));
    
            var isValidParameter = isValid != null ?
                new ObjectParameter("isValid", isValid) :
                new ObjectParameter("isValid", typeof(string));
    
            var isKRADoneParameter = isKRADone != null ?
                new ObjectParameter("isKRADone", isKRADone) :
                new ObjectParameter("isKRADone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_SearchAllKRADetail_Result>("Rpt_SearchAllKRADetail", personIdParameter, kraCategoryIdParameter, yearIdParameter, weightageIdParameter, quartersParameter, isValidParameter, isKRADoneParameter);
        }
        
        public virtual ObjectResult<string> GetKRAStartEndDate(Nullable<bool> q1, Nullable<bool> q2, Nullable<bool> q3, Nullable<bool> q4, ObjectParameter startEndDate)
        {
            var q1Parameter = q1.HasValue ?
                new ObjectParameter("Q1", q1) :
                new ObjectParameter("Q1", typeof(bool));
    
            var q2Parameter = q2.HasValue ?
                new ObjectParameter("Q2", q2) :
                new ObjectParameter("Q2", typeof(bool));
    
            var q3Parameter = q3.HasValue ?
                new ObjectParameter("Q3", q3) :
                new ObjectParameter("Q3", typeof(bool));
    
            var q4Parameter = q4.HasValue ?
                new ObjectParameter("Q4", q4) :
                new ObjectParameter("Q4", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetKRAStartEndDate", q1Parameter, q2Parameter, q3Parameter, q4Parameter, startEndDate);
        }

        public virtual ObjectResult<ReviewerList_Result> ReviewerList(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReviewerList_Result>("ReviewerList", personIdParameter);
        }

        public virtual ObjectResult<InitiationList_Result> InitiationList(Nullable<int> year, string type)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InitiationList_Result>("InitiationList", yearParameter, typeParameter);
        }

        public virtual ObjectResult<ExistingKRAInitiation_Result> ExistingKRAInitiation(Nullable<int> personId, Nullable<int> year)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExistingKRAInitiation_Result>("ExistingKRAInitiation", personIdParameter, yearParameter);
        }

        public virtual int MapKRAInitiation(string personIdList)
        {
            var personIdListParameter = personIdList != null ?
                new ObjectParameter("PersonIdList", personIdList) :
                new ObjectParameter("PersonIdList", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MapKRAInitiation", personIdListParameter);
        }          
        public virtual ObjectResult<GetApprovalByMe_Result> GetApprovalByMe(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovalByMe_Result>("GetApprovalByMe", userIDParameter);
        }
    
        public virtual ObjectResult<GetStatusCount_Result> GetStatusCount(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatusCount_Result>("GetStatusCount", userIdParameter);
        }
			
        public virtual ObjectResult<Nullable<int>> GetFloatingHolidayStatusByPersonId(Nullable<int> personID, Nullable<int> holidayYear, Nullable<int> location)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));

            var holidayYearParameter = holidayYear.HasValue ?
                new ObjectParameter("HolidayYear", holidayYear) :
                new ObjectParameter("HolidayYear", typeof(int));

            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetFloatingHolidayStatusByPersonId", personIDParameter, holidayYearParameter, locationParameter);
        }
        public virtual ObjectResult<GetAppraisalRatingByYears_Result> GetAppraisalRatingByYears(Nullable<int> userId)
        {
            var userIDParameter = userId.HasValue ?
                   new ObjectParameter("UserId", userId) :
                   new ObjectParameter("UserId", typeof(int));
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppraisalRatingByYears_Result>("GetAppraisalRatingByYears", userIDParameter);
		}
        public virtual ObjectResult<GetAllActiveEmpList_Result> GetAllActiveEmpList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllActiveEmpList_Result>("GetAllActiveEmpList");
        }
         public virtual ObjectResult<GetKRAHistoryDetails_Result> GetKRAHistoryDetails(Nullable<int> personId, Nullable<int> id)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRAHistoryDetails_Result>("GetKRAHistoryDetails", personIdParameter, idParameter);
        }
        public virtual ObjectResult<GetGroupHeadEmail_Result> GetGroupHeadEmail(Nullable<int> personId, Nullable<int> grade)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(int));

            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroupHeadEmail_Result>("GetGroupHeadEmail", personIdParameter, gradeParameter);
        }

        public virtual int CloneFromKRAHistoryDetails(Nullable<int> id, Nullable<int> kRACategoryId, Nullable<int> personId, string kRA, Nullable<int> yearId, string description, Nullable<int> weightage, Nullable<int> parentKRAId, Nullable<bool> q1, Nullable<bool> q2, Nullable<bool> q3, Nullable<bool> q4, Nullable<bool> IsCloned,Nullable<int> kRAInitiationId, string comments, Nullable<System.DateTime> kRAStartDate, Nullable<System.DateTime> kRAEndDate, Nullable<System.DateTime> kRAInitiationEndDate, Nullable<int> createdBy, Nullable<int> modifiedBy, Nullable<int> kRAHistoryClonedBy, Nullable<System.DateTime> kRAHistoryClonedDate, Nullable<int> kRAHistoryId, Nullable<int> kRAGoalId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var kRACategoryIdParameter = kRACategoryId.HasValue ?
                new ObjectParameter("KRACategoryId", kRACategoryId) :
                new ObjectParameter("KRACategoryId", typeof(int));

            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            var kRAParameter = kRA != null ?
                new ObjectParameter("KRA", kRA) :
                new ObjectParameter("KRA", typeof(string));

            var yearIdParameter = yearId.HasValue ?
                new ObjectParameter("YearId", yearId) :
                new ObjectParameter("YearId", typeof(int));

            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));

            var weightageParameter = weightage.HasValue ?
                new ObjectParameter("Weightage", weightage) :
                new ObjectParameter("Weightage", typeof(int));

            var parentKRAIdParameter = parentKRAId.HasValue ?
                new ObjectParameter("ParentKRAId", parentKRAId) :
                new ObjectParameter("ParentKRAId", typeof(int));

            var q1Parameter = q1.HasValue ?
                new ObjectParameter("Q1", q1) :
                new ObjectParameter("Q1", typeof(bool));

            var q2Parameter = q2.HasValue ?
                new ObjectParameter("Q2", q2) :
                new ObjectParameter("Q2", typeof(bool));

            var q3Parameter = q3.HasValue ?
                new ObjectParameter("Q3", q3) :
                new ObjectParameter("Q3", typeof(bool));

            var q4Parameter = q4.HasValue ?
                new ObjectParameter("Q4", q4) :
                new ObjectParameter("Q4", typeof(bool));

            var isClonedParameter = IsCloned.HasValue ?
                new ObjectParameter("IsCloned", IsCloned) :
                new ObjectParameter("IsCloned", typeof(bool));

            var kRAInitiationIdParameter = kRAInitiationId.HasValue ?
                new ObjectParameter("KRAInitiationId", kRAInitiationId) :
                new ObjectParameter("KRAInitiationId", typeof(int));

            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));

            var kRAStartDateParameter = kRAStartDate.HasValue ?
                new ObjectParameter("KRAStartDate", kRAStartDate) :
                new ObjectParameter("KRAStartDate", typeof(System.DateTime));

            var kRAEndDateParameter = kRAEndDate.HasValue ?
                new ObjectParameter("KRAEndDate", kRAEndDate) :
                new ObjectParameter("KRAEndDate", typeof(System.DateTime));

            var kRAInitiationEndDateParameter = kRAInitiationEndDate.HasValue ?
                new ObjectParameter("KRAInitiationEndDate", kRAInitiationEndDate) :
                new ObjectParameter("KRAInitiationEndDate", typeof(System.DateTime));

            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));

            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));

            var kRAHistoryClonedByParameter = kRAHistoryClonedBy.HasValue ?
                new ObjectParameter("KRAHistoryClonedBy", kRAHistoryClonedBy) :
                new ObjectParameter("KRAHistoryClonedBy", typeof(int));

            var kRAHistoryClonedDateParameter = kRAHistoryClonedDate.HasValue ?
                new ObjectParameter("KRAHistoryClonedDate", kRAHistoryClonedDate) :
                new ObjectParameter("KRAHistoryClonedDate", typeof(System.DateTime));

            var kRAHistoryIdParameter = kRAHistoryId.HasValue ?
                new ObjectParameter("KRAHistoryId", kRAHistoryId) :
                new ObjectParameter("KRAHistoryId", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloneFromKRAHistoryDetails", idParameter, kRACategoryIdParameter, personIdParameter, kRAParameter, yearIdParameter, descriptionParameter, weightageParameter, parentKRAIdParameter, q1Parameter, q2Parameter, q3Parameter, q4Parameter, isClonedParameter, kRAInitiationIdParameter, commentsParameter, kRAStartDateParameter, kRAEndDateParameter, kRAInitiationEndDateParameter, createdByParameter, modifiedByParameter, kRAHistoryClonedByParameter, kRAHistoryClonedDateParameter, kRAHistoryIdParameter, kRAGoalIdParameter);
        }

        public virtual ObjectResult<SearchAllKRAHistoryDetail_Result> SearchAllKRAHistoryDetail(string personId, string yearId, string isKRADone)
        {
            var personIdParameter = personId != null ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(string));

            var yearIdParameter = yearId != null ?
                new ObjectParameter("yearId", yearId) :
                new ObjectParameter("yearId", typeof(string));

            var isKRADoneParameter = isKRADone != null ?
                new ObjectParameter("isKRADone", isKRADone) :
                new ObjectParameter("isKRADone", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAllKRAHistoryDetail_Result>("SearchAllKRAHistoryDetail", personIdParameter, yearIdParameter, isKRADoneParameter);
        }

        public virtual ObjectResult<ValidateDetailsToCloneKRA_Result> ValidateDetailsToCloneKRA(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateDetailsToCloneKRA_Result>("ValidateDetailsToCloneKRA", personIdParameter);
        }

        public virtual ObjectResult<UpdateKRAHistory_Result> UpdateKRAHistory(Nullable<int> userId, Nullable<int> id, Nullable<int> personId, Nullable<bool> isValid, string comments, Nullable<bool> isKRADone, Nullable<System.DateTime> kRADoneOn, Nullable<int> kRAPercentageCompletion, Nullable<int> kRAGoalId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));

            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            var isValidParameter = isValid.HasValue ?
                new ObjectParameter("IsValid", isValid) :
                new ObjectParameter("IsValid", typeof(bool));

            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));

            var isKRADoneParameter = isKRADone.HasValue ?
                new ObjectParameter("IsKRADone", isKRADone) :
                new ObjectParameter("IsKRADone", typeof(bool));

            var kRADoneOnParameter = kRADoneOn.HasValue ?
                new ObjectParameter("KRADoneOn", kRADoneOn) :
                new ObjectParameter("KRADoneOn", typeof(System.DateTime));

            var kRAPercentageCompletionParameter = kRAPercentageCompletion.HasValue ?
                new ObjectParameter("KRAPercentageCompletion", kRAPercentageCompletion) :
                new ObjectParameter("KRAPercentageCompletion", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateKRAHistory_Result>("UpdateKRAHistory", userIdParameter, idParameter, personIdParameter, isValidParameter, commentsParameter, isKRADoneParameter, kRADoneOnParameter, kRAPercentageCompletionParameter, kRAGoalIdParameter);
        }
        public virtual ObjectResult<GetAppraisalReportByYear_Result> GetAppraisalReportByYear(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppraisalReportByYear_Result>("GetAppraisalReportByYear", yearParameter);
        }
        public virtual int InsertEmail(string content, string emailFrom, string emailTo, string emailCC, string subject)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));

            var emailFromParameter = emailFrom != null ?
                new ObjectParameter("EmailFrom", emailFrom) :
                new ObjectParameter("EmailFrom", typeof(string));

            var emailToParameter = emailTo != null ?
                new ObjectParameter("EmailTo", emailTo) :
                new ObjectParameter("EmailTo", typeof(string));

            var emailCCParameter = emailCC != null ?
                new ObjectParameter("EmailCC", emailCC) :
                new ObjectParameter("EmailCC", typeof(string));

            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmail", contentParameter, emailFromParameter, emailToParameter, emailCCParameter, subjectParameter);
        }
        public virtual ObjectResult<GetTotalHours_Available_Reported_Result> GetTotalHours_Available_Reported(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var iDParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitID", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitID", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalHours_Available_Reported_Result>("GetTotalHours_Available_Reported", iDParameter, startDateParameter, endDateParameter);
        }
        public virtual int ChangeExitManager(Nullable<int> personID, Nullable<int> oldExitManagerID, Nullable<int> newExitManagerID )
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));

            var oldExitManagerIDParameter = oldExitManagerID.HasValue ?
                new ObjectParameter("OldExitManagerID", oldExitManagerID) :
                new ObjectParameter("OldExitManagerID", typeof(int));

            var newExitManagerIDParameter = newExitManagerID.HasValue ?
                new ObjectParameter("NewExitManagerID", newExitManagerID) :
                new ObjectParameter("NewExitManagerID", typeof(int));


            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeExitManager", personIDParameter, oldExitManagerIDParameter, newExitManagerIDParameter);
        }
        public virtual ObjectResult<GetHoursForClientCompetency_Result> GetHoursForClientCompetency(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoursForClientCompetency_Result>("GetHoursForClientCompetency", deliveryUnitIdParameter, startDateParameter, endDateParameter);
        }
        public virtual ObjectResult<GetHoursForOrgActivity_Result> GetHoursForOrgActivity(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoursForOrgActivity_Result>("GetHoursForOrgActivity", deliveryUnitIdParameter, startDateParameter, endDateParameter);
        }
        public virtual ObjectResult<GetHoursForInvProject_Result> GetHoursForInvProject(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoursForInvProject_Result>("GetHoursForInvProject", deliveryUnitIdParameter, startDateParameter, endDateParameter);
        }
        public virtual ObjectResult<GetHoursForLearning_Result> GetHoursForLearning(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoursForLearning_Result>("GetHoursForLearning", deliveryUnitIdParameter, startDateParameter, endDateParameter);
        }

        public virtual ObjectResult<BillableVsNonBillableByClientProjectReport_Result> BillableVsNonBillableByClientProjectReport(Nullable<int> duId, Nullable<System.DateTime> sDATE, Nullable<System.DateTime> eDATE)
        {
            var duIdParameter = duId.HasValue ?
                new ObjectParameter("DuId", duId) :
                new ObjectParameter("DuId", typeof(int));

            var sDATEParameter = sDATE.HasValue ?
                new ObjectParameter("SDATE", sDATE) :
                new ObjectParameter("SDATE", typeof(System.DateTime));

            var eDATEParameter = eDATE.HasValue ?
                new ObjectParameter("EDATE", eDATE) :
                new ObjectParameter("EDATE", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BillableVsNonBillableByClientProjectReport_Result>("BillableVsNonBillableByClientProjectReport", duIdParameter, sDATEParameter, eDATEParameter);
        }
        public virtual ObjectResult<GetCompliance_Hours_Percentage_Result> GetCompliance_Hours_Percentage(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var iDParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompliance_Hours_Percentage_Result>("GetCompliance_Hours_Percentage", iDParameter, startDateParameter, endDateParameter);
        }
        public virtual ObjectResult<Nullable<int>> GetTotalLeave_Count(Nullable<int> deliveryUnitId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var deliveryUnitIdParameter = deliveryUnitId.HasValue ?
                new ObjectParameter("DeliveryUnitId", deliveryUnitId) :
                new ObjectParameter("DeliveryUnitId", typeof(int));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalLeave_Count", deliveryUnitIdParameter, startDateParameter, endDateParameter);
        }    
        public virtual ObjectResult<GetSeparationListData_Result> GetSeparationListData(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSeparationListData_Result>("GetSeparationListData", userIdParameter);
        }

        public virtual ObjectResult<rpt_ExitClearanceReport_Result> rpt_ExitClearanceReport(string employmentStatus, string employeeCode, string deliveryUnit, string deliveryTeam, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var employmentStatusParameter = employmentStatus != null ?
                new ObjectParameter("EmploymentStatus", employmentStatus) :
                new ObjectParameter("EmploymentStatus", typeof(string));

            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));

            var deliveryUnitParameter = deliveryUnit != null ?
                new ObjectParameter("DeliveryUnit", deliveryUnit) :
                new ObjectParameter("DeliveryUnit", typeof(string));

            var deliveryTeamParameter = deliveryTeam != null ?
                new ObjectParameter("DeliveryTeam", deliveryTeam) :
                new ObjectParameter("DeliveryTeam", typeof(string));

            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_ExitClearanceReport_Result>("rpt_ExitClearanceReport", employmentStatusParameter, employeeCodeParameter, deliveryUnitParameter, deliveryTeamParameter, startDateParameter, endDateParameter);
        }

        public virtual int SendReminderForLogIn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendReminderForLogIn");
        }

        public virtual ObjectResult<GetKRAAttachmentById_Result> GetKRAAttachmentById(Nullable<int> kraGoalId)
        {
            var kraGoalIdParameter = kraGoalId.HasValue ?
                new ObjectParameter("KraGoalId", kraGoalId) :
                new ObjectParameter("KraGoalId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRAAttachmentById_Result>("GetKRAAttachmentById", kraGoalIdParameter);
        }
        public virtual ObjectResult<GetLedgerReport_Result> GetLedgerReport(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, Nullable<int> projectId, Nullable<int> personId, Nullable<int> subProjectId)
        {
            var reportStartDateParameter = reportStartDate.HasValue ?
                new ObjectParameter("ReportStartDate", reportStartDate) :
                new ObjectParameter("ReportStartDate", typeof(System.DateTime));
    
            var reportEndDateParameter = reportEndDate.HasValue ?
                new ObjectParameter("ReportEndDate", reportEndDate) :
                new ObjectParameter("ReportEndDate", typeof(System.DateTime));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var subProjectIdParameter = subProjectId.HasValue ?
                new ObjectParameter("SubProjectId", subProjectId) :
                new ObjectParameter("SubProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLedgerReport_Result>("GetLedgerReport", reportStartDateParameter, reportEndDateParameter, projectIdParameter, personIdParameter, subProjectIdParameter);
        }
                
        public virtual ObjectResult<GetSummaryReport_Result> GetSummaryReport(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, Nullable<int> personId)
        {
            var reportStartDateParameter = reportStartDate.HasValue ?
                new ObjectParameter("ReportStartDate", reportStartDate) :
                new ObjectParameter("ReportStartDate", typeof(System.DateTime));
    
            var reportEndDateParameter = reportEndDate.HasValue ?
                new ObjectParameter("ReportEndDate", reportEndDate) :
                new ObjectParameter("ReportEndDate", typeof(System.DateTime));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSummaryReport_Result>("GetSummaryReport", reportStartDateParameter, reportEndDateParameter, personIdParameter);
        }

        public virtual int AddOrUpdateKRAFeedbackForm(Nullable<int> id, Nullable<int> kRAGoalId, Nullable<int> year, string quarter, Nullable<int> personId, string feedback, Nullable<int> createdBy, Nullable<int> updatedBy, Nullable<System.DateTime> completionDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            var quarterParameter = quarter != null ?
                new ObjectParameter("Quarter", quarter) :
                new ObjectParameter("Quarter", typeof(string));

            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            var feedbackParameter = feedback != null ?
                new ObjectParameter("Feedback", feedback) :
                new ObjectParameter("Feedback", typeof(string));

            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));

            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));

            var completionDateParameter = completionDate.HasValue ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrUpdateKRAFeedbackForm", idParameter, kRAGoalIdParameter, yearParameter, quarterParameter, personIdParameter, feedbackParameter, createdByParameter, updatedByParameter, completionDateParameter);
        }
        public virtual ObjectResult<GetKRAFeedbackForm_Result> GetKRAFeedbackForm(Nullable<int> kRAGoalId, Nullable<int> personId)
        {
            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRAFeedbackForm_Result>("GetKRAFeedbackForm", kRAGoalIdParameter, personIdParameter);
        }

        public virtual ObjectResult<GetKRALogs_Result> GetKRALogs(Nullable<int> personId, string years)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));

            var yearsParameter = years != null ?
                new ObjectParameter("Years", years) :
                new ObjectParameter("Years", typeof(string));
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKRALogs_Result>("GetKRALogs", personIdParameter, yearsParameter);
        }

        public virtual int DeleteKRAFeedback(Nullable<int> id, Nullable<int> kRAGoalId, Nullable<int> updatedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var kRAGoalIdParameter = kRAGoalId.HasValue ?
                new ObjectParameter("KRAGoalId", kRAGoalId) :
                new ObjectParameter("KRAGoalId", typeof(int));

            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteKRAFeedback", idParameter, kRAGoalIdParameter, updatedByParameter);
        }

        public virtual ObjectResult<GetDetailsToApproveTravelRequest_Result> GetDetailsToApproveTravelRequest(Nullable<int> PersonId, Nullable<int> year)
        {
            var personIdParameter = PersonId.HasValue ?
                new ObjectParameter("PersonId", PersonId) :
                new ObjectParameter("PersonId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDetailsToApproveTravelRequest_Result>("GetDetailsToApproveTravelRequest", personIdParameter, yearParameter);
        }
    }
}
